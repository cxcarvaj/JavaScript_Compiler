Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement
Rule 2     sentencias -> if
Rule 3     sentencias -> for
Rule 4     sentencias -> while
Rule 5     sentencias -> statement sentencias
Rule 6     sentencias -> if sentencias
Rule 7     sentencias -> while sentencias
Rule 8     sentencias -> for sentencias
Rule 9     statement -> stm
Rule 10    statement -> stm SEMICOLON
Rule 11    stm -> asignacion
Rule 12    stm -> asignacion_date
Rule 13    stm -> array
Rule 14    stm -> set
Rule 15    stm -> expresion
Rule 16    stm -> metodos
Rule 17    metodos -> imprimir
Rule 18    metodos -> touppercase
Rule 19    metodos -> tolowercase
Rule 20    metodos -> startwith
Rule 21    metodos -> tostring
Rule 22    metodos -> pop
Rule 23    metodos -> push
Rule 24    metodos -> shift
Rule 25    metodos -> setdate
Rule 26    metodos -> getfullyear
Rule 27    metodos -> has
Rule 28    metodos -> intersection
Rule 29    metodos -> union
Rule 30    imprimir -> PRINT LPAREN factor RPAREN
Rule 31    touppercase -> ID TOUPPERCASE LPAREN RPAREN
Rule 32    touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
Rule 33    tolowercase -> ID TOLOWERCASE LPAREN RPAREN
Rule 34    tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
Rule 35    startwith -> ID STARTSWITH LPAREN STRING RPAREN
Rule 36    startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
Rule 37    tostring -> ID TOSTRING LPAREN RPAREN
Rule 38    tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN
Rule 39    pop -> ID POP LPAREN RPAREN
Rule 40    pop -> type ID EQUAL ID POP LPAREN RPAREN
Rule 41    push -> ID PUSH LPAREN factor RPAREN
Rule 42    push -> type ID EQUAL ID PUSH LPAREN factor RPAREN
Rule 43    shift -> ID SHIFT LPAREN RPAREN
Rule 44    shift -> type ID EQUAL ID SHIFT LPAREN RPAREN
Rule 45    setdate -> ID SETDATE LPAREN NUMBER RPAREN
Rule 46    setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
Rule 47    getfullyear -> ID GETFULLYEAR LPAREN RPAREN
Rule 48    getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
Rule 49    has -> ID HAS LPAREN factor RPAREN
Rule 50    has -> type ID EQUAL ID HAS LPAREN factor RPAREN
Rule 51    intersection -> ID INTERSECTION LPAREN set_parametro RPAREN
Rule 52    intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
Rule 53    union -> ID UNION LPAREN set_parametro RPAREN
Rule 54    union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN
Rule 55    while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
Rule 56    if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
Rule 57    if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
Rule 58    if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
Rule 59    condicion -> TRUE
Rule 60    condicion -> FALSE
Rule 61    condicion -> NOT expresion
Rule 62    condicion -> expresion operadorlogico expresion
Rule 63    condicion -> LPAREN condicion RPAREN operadorlogico expresion
Rule 64    condicion -> expresion operadorlogico LPAREN condicion RPAREN
Rule 65    condicion -> expresion operador_comparison expresion
Rule 66    else -> ELSE LBRACE sentencias RBRACE
Rule 67    elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
Rule 68    for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
Rule 69    asignacion -> ID EQUAL expresion
Rule 70    asignacion -> declaracion
Rule 71    asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN
Rule 72    asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN
Rule 73    array -> type ID EQUAL LBRACKET RBRACKET
Rule 74    array -> type ID EQUAL LBRACKET arr_parametro RBRACKET
Rule 75    set -> type ID EQUAL NEW SET LPAREN RPAREN
Rule 76    set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN
Rule 77    arr_parametro -> expresion
Rule 78    arr_parametro -> expresion COMMA arr_parametro
Rule 79    set_parametro -> LBRACKET arr_parametro RBRACKET
Rule 80    set_parametro -> ID
Rule 81    declaracion -> type ID EQUAL expresion
Rule 82    date_param -> STRING
Rule 83    date_param -> NUMBER
Rule 84    date_param -> NUMBER COMMA NUMBER
Rule 85    date_param -> NUMBER COMMA NUMBER COMMA NUMBER
Rule 86    type -> VAR
Rule 87    type -> LET
Rule 88    expresion -> NUMBER operador NUMBER
Rule 89    operador -> MINUS
Rule 90    operador -> PLUS
Rule 91    operador -> DIVIDE
Rule 92    operador -> TIMES
Rule 93    operador -> MOD
Rule 94    operadorlogico -> EQUALS
Rule 95    operadorlogico -> NOTEQUALS
Rule 96    operadorlogico -> STRICTEQUALS
Rule 97    operadorlogico -> MORETHAN
Rule 98    operadorlogico -> LESSTHAN
Rule 99    operadorlogico -> MORETHANEQUALS
Rule 100   operadorlogico -> LESSTHANEQUALS
Rule 101   operadorlogico -> STRICTNOTEQUALS
Rule 102   operador_comparison -> AND
Rule 103   operador_comparison -> OR
Rule 104   expresion -> term
Rule 105   term -> factor
Rule 106   factor -> ID
Rule 107   factor -> NUMBER
Rule 108   factor -> STRING
Rule 109   factor -> TRUE
Rule 110   factor -> FALSE

Terminals, with rules where they appear

AND                  : 102
COMMA                : 78 84 85 85
DATE                 : 71 72
DIVIDE               : 91
ELSE                 : 66 67
EQUAL                : 32 34 36 38 40 42 44 46 48 50 52 54 69 71 72 73 74 75 76 81
EQUALS               : 94
FALSE                : 60 110
FOR                  : 68
GETFULLYEAR          : 47 48
HAS                  : 49 50
ID                   : 31 32 32 33 34 34 35 36 36 37 38 38 39 40 40 41 42 42 43 44 44 45 46 46 47 48 48 49 50 50 51 52 52 53 54 54 68 68 69 71 72 73 74 75 76 80 81 106
IF                   : 56 57 58 67
INTERSECTION         : 51 52
LBRACE               : 55 56 57 58 66 67 68
LBRACKET             : 73 74 79
LESSTHAN             : 98
LESSTHANEQUALS       : 100
LET                  : 87
LPAREN               : 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 63 64 67 68 71 72 75 76
MINUS                : 89
MOD                  : 93
MORETHAN             : 97
MORETHANEQUALS       : 99
NEW                  : 71 72 75 76
NEWLINE              : 
NOT                  : 61
NOTEQUALS            : 95
NUMBER               : 45 46 83 84 84 85 85 85 88 88 107
OF                   : 68
OR                   : 103
PLUS                 : 90
POP                  : 39 40
PRINT                : 30
PUSH                 : 41 42
RBRACE               : 55 56 57 58 66 67 68
RBRACKET             : 73 74 79
RPAREN               : 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 63 64 67 68 71 72 75 76
SEMICOLON            : 10
SET                  : 75 76
SETDATE              : 45 46
SHIFT                : 43 44
STARTSWITH           : 35 36
STRICTEQUALS         : 96
STRICTNOTEQUALS      : 101
STRING               : 35 36 82 108
TIMES                : 92
TOLOWERCASE          : 33 34
TOSTRING             : 37 38
TOUPPERCASE          : 31 32
TRUE                 : 59 109
UNION                : 53 54
VAR                  : 86
WHILE                : 55
error                : 

Nonterminals, with rules where they appear

arr_parametro        : 74 78 79
array                : 13
asignacion           : 11
asignacion_date      : 12
condicion            : 55 56 57 58 63 64 67
date_param           : 72
declaracion          : 70
else                 : 57 67
elseif               : 58
expresion            : 15 61 62 62 63 64 65 65 69 77 78 81
factor               : 30 41 42 49 50 105
for                  : 3 8
getfullyear          : 26
has                  : 27
if                   : 2 6
imprimir             : 17
intersection         : 28
metodos              : 16
operador             : 88
operador_comparison  : 65
operadorlogico       : 62 63 64
pop                  : 22
push                 : 23
sentencias           : 5 6 7 8 55 56 57 58 66 67 68 0
set                  : 14
set_parametro        : 51 52 53 54 76
setdate              : 25
shift                : 24
startwith            : 20
statement            : 1 5
stm                  : 9 10
term                 : 104
tolowercase          : 19
tostring             : 21
touppercase          : 18
type                 : 32 34 36 38 40 42 44 46 48 50 52 54 68 71 72 73 74 75 76 81
union                : 29
while                : 4 7

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement .
    (5) sentencias -> statement . sentencias
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    $end            reduce using rule 1 (sentencias -> statement .)
    RBRACE          reduce using rule 1 (sentencias -> statement .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    statement                      shift and go to state 2
    sentencias                     shift and go to state 41
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 3

    (2) sentencias -> if .
    (6) sentencias -> if . sentencias
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    $end            reduce using rule 2 (sentencias -> if .)
    RBRACE          reduce using rule 2 (sentencias -> if .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    if                             shift and go to state 3
    sentencias                     shift and go to state 42
    statement                      shift and go to state 2
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 4

    (3) sentencias -> for .
    (8) sentencias -> for . sentencias
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    $end            reduce using rule 3 (sentencias -> for .)
    RBRACE          reduce using rule 3 (sentencias -> for .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    for                            shift and go to state 4
    sentencias                     shift and go to state 43
    statement                      shift and go to state 2
    if                             shift and go to state 3
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 5

    (4) sentencias -> while .
    (7) sentencias -> while . sentencias
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    $end            reduce using rule 4 (sentencias -> while .)
    RBRACE          reduce using rule 4 (sentencias -> while .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    while                          shift and go to state 5
    sentencias                     shift and go to state 44
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 6

    (9) statement -> stm .
    (10) statement -> stm . SEMICOLON

    IF              reduce using rule 9 (statement -> stm .)
    FOR             reduce using rule 9 (statement -> stm .)
    WHILE           reduce using rule 9 (statement -> stm .)
    ID              reduce using rule 9 (statement -> stm .)
    NUMBER          reduce using rule 9 (statement -> stm .)
    VAR             reduce using rule 9 (statement -> stm .)
    LET             reduce using rule 9 (statement -> stm .)
    PRINT           reduce using rule 9 (statement -> stm .)
    STRING          reduce using rule 9 (statement -> stm .)
    TRUE            reduce using rule 9 (statement -> stm .)
    FALSE           reduce using rule 9 (statement -> stm .)
    $end            reduce using rule 9 (statement -> stm .)
    RBRACE          reduce using rule 9 (statement -> stm .)
    SEMICOLON       shift and go to state 45


state 7

    (56) if -> IF . LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> IF . LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> IF . LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif

    LPAREN          shift and go to state 46


state 8

    (68) for -> FOR . LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE

    LPAREN          shift and go to state 47


state 9

    (71) asignacion_date -> type . ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> type . ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> type . ID EQUAL LBRACKET RBRACKET
    (74) array -> type . ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> type . ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> type . ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (81) declaracion -> type . ID EQUAL expresion
    (32) touppercase -> type . ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (34) tolowercase -> type . ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (36) startwith -> type . ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (38) tostring -> type . ID EQUAL ID TOSTRING LPAREN RPAREN
    (40) pop -> type . ID EQUAL ID POP LPAREN RPAREN
    (42) push -> type . ID EQUAL ID PUSH LPAREN factor RPAREN
    (44) shift -> type . ID EQUAL ID SHIFT LPAREN RPAREN
    (46) setdate -> type . ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (48) getfullyear -> type . ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (50) has -> type . ID EQUAL ID HAS LPAREN factor RPAREN
    (52) intersection -> type . ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (54) union -> type . ID EQUAL ID UNION LPAREN set_parametro RPAREN

    ID              shift and go to state 48


state 10

    (69) asignacion -> ID . EQUAL expresion
    (31) touppercase -> ID . TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> ID . TOLOWERCASE LPAREN RPAREN
    (35) startwith -> ID . STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> ID . TOSTRING LPAREN RPAREN
    (39) pop -> ID . POP LPAREN RPAREN
    (41) push -> ID . PUSH LPAREN factor RPAREN
    (43) shift -> ID . SHIFT LPAREN RPAREN
    (45) setdate -> ID . SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> ID . GETFULLYEAR LPAREN RPAREN
    (49) has -> ID . HAS LPAREN factor RPAREN
    (51) intersection -> ID . INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> ID . UNION LPAREN set_parametro RPAREN
    (106) factor -> ID .

    EQUAL           shift and go to state 49
    TOUPPERCASE     shift and go to state 50
    TOLOWERCASE     shift and go to state 51
    STARTSWITH      shift and go to state 52
    TOSTRING        shift and go to state 53
    POP             shift and go to state 54
    PUSH            shift and go to state 55
    SHIFT           shift and go to state 56
    SETDATE         shift and go to state 57
    GETFULLYEAR     shift and go to state 58
    HAS             shift and go to state 59
    INTERSECTION    shift and go to state 60
    UNION           shift and go to state 61
    SEMICOLON       reduce using rule 106 (factor -> ID .)
    IF              reduce using rule 106 (factor -> ID .)
    FOR             reduce using rule 106 (factor -> ID .)
    WHILE           reduce using rule 106 (factor -> ID .)
    ID              reduce using rule 106 (factor -> ID .)
    NUMBER          reduce using rule 106 (factor -> ID .)
    VAR             reduce using rule 106 (factor -> ID .)
    LET             reduce using rule 106 (factor -> ID .)
    PRINT           reduce using rule 106 (factor -> ID .)
    STRING          reduce using rule 106 (factor -> ID .)
    TRUE            reduce using rule 106 (factor -> ID .)
    FALSE           reduce using rule 106 (factor -> ID .)
    $end            reduce using rule 106 (factor -> ID .)
    RBRACE          reduce using rule 106 (factor -> ID .)


state 11

    (55) while -> WHILE . LPAREN condicion RPAREN LBRACE sentencias RBRACE

    LPAREN          shift and go to state 62


state 12

    (11) stm -> asignacion .

    SEMICOLON       reduce using rule 11 (stm -> asignacion .)
    IF              reduce using rule 11 (stm -> asignacion .)
    FOR             reduce using rule 11 (stm -> asignacion .)
    WHILE           reduce using rule 11 (stm -> asignacion .)
    ID              reduce using rule 11 (stm -> asignacion .)
    NUMBER          reduce using rule 11 (stm -> asignacion .)
    VAR             reduce using rule 11 (stm -> asignacion .)
    LET             reduce using rule 11 (stm -> asignacion .)
    PRINT           reduce using rule 11 (stm -> asignacion .)
    STRING          reduce using rule 11 (stm -> asignacion .)
    TRUE            reduce using rule 11 (stm -> asignacion .)
    FALSE           reduce using rule 11 (stm -> asignacion .)
    $end            reduce using rule 11 (stm -> asignacion .)
    RBRACE          reduce using rule 11 (stm -> asignacion .)


state 13

    (12) stm -> asignacion_date .

    SEMICOLON       reduce using rule 12 (stm -> asignacion_date .)
    IF              reduce using rule 12 (stm -> asignacion_date .)
    FOR             reduce using rule 12 (stm -> asignacion_date .)
    WHILE           reduce using rule 12 (stm -> asignacion_date .)
    ID              reduce using rule 12 (stm -> asignacion_date .)
    NUMBER          reduce using rule 12 (stm -> asignacion_date .)
    VAR             reduce using rule 12 (stm -> asignacion_date .)
    LET             reduce using rule 12 (stm -> asignacion_date .)
    PRINT           reduce using rule 12 (stm -> asignacion_date .)
    STRING          reduce using rule 12 (stm -> asignacion_date .)
    TRUE            reduce using rule 12 (stm -> asignacion_date .)
    FALSE           reduce using rule 12 (stm -> asignacion_date .)
    $end            reduce using rule 12 (stm -> asignacion_date .)
    RBRACE          reduce using rule 12 (stm -> asignacion_date .)


state 14

    (13) stm -> array .

    SEMICOLON       reduce using rule 13 (stm -> array .)
    IF              reduce using rule 13 (stm -> array .)
    FOR             reduce using rule 13 (stm -> array .)
    WHILE           reduce using rule 13 (stm -> array .)
    ID              reduce using rule 13 (stm -> array .)
    NUMBER          reduce using rule 13 (stm -> array .)
    VAR             reduce using rule 13 (stm -> array .)
    LET             reduce using rule 13 (stm -> array .)
    PRINT           reduce using rule 13 (stm -> array .)
    STRING          reduce using rule 13 (stm -> array .)
    TRUE            reduce using rule 13 (stm -> array .)
    FALSE           reduce using rule 13 (stm -> array .)
    $end            reduce using rule 13 (stm -> array .)
    RBRACE          reduce using rule 13 (stm -> array .)


state 15

    (14) stm -> set .

    SEMICOLON       reduce using rule 14 (stm -> set .)
    IF              reduce using rule 14 (stm -> set .)
    FOR             reduce using rule 14 (stm -> set .)
    WHILE           reduce using rule 14 (stm -> set .)
    ID              reduce using rule 14 (stm -> set .)
    NUMBER          reduce using rule 14 (stm -> set .)
    VAR             reduce using rule 14 (stm -> set .)
    LET             reduce using rule 14 (stm -> set .)
    PRINT           reduce using rule 14 (stm -> set .)
    STRING          reduce using rule 14 (stm -> set .)
    TRUE            reduce using rule 14 (stm -> set .)
    FALSE           reduce using rule 14 (stm -> set .)
    $end            reduce using rule 14 (stm -> set .)
    RBRACE          reduce using rule 14 (stm -> set .)


state 16

    (15) stm -> expresion .

    SEMICOLON       reduce using rule 15 (stm -> expresion .)
    IF              reduce using rule 15 (stm -> expresion .)
    FOR             reduce using rule 15 (stm -> expresion .)
    WHILE           reduce using rule 15 (stm -> expresion .)
    ID              reduce using rule 15 (stm -> expresion .)
    NUMBER          reduce using rule 15 (stm -> expresion .)
    VAR             reduce using rule 15 (stm -> expresion .)
    LET             reduce using rule 15 (stm -> expresion .)
    PRINT           reduce using rule 15 (stm -> expresion .)
    STRING          reduce using rule 15 (stm -> expresion .)
    TRUE            reduce using rule 15 (stm -> expresion .)
    FALSE           reduce using rule 15 (stm -> expresion .)
    $end            reduce using rule 15 (stm -> expresion .)
    RBRACE          reduce using rule 15 (stm -> expresion .)


state 17

    (16) stm -> metodos .

    SEMICOLON       reduce using rule 16 (stm -> metodos .)
    IF              reduce using rule 16 (stm -> metodos .)
    FOR             reduce using rule 16 (stm -> metodos .)
    WHILE           reduce using rule 16 (stm -> metodos .)
    ID              reduce using rule 16 (stm -> metodos .)
    NUMBER          reduce using rule 16 (stm -> metodos .)
    VAR             reduce using rule 16 (stm -> metodos .)
    LET             reduce using rule 16 (stm -> metodos .)
    PRINT           reduce using rule 16 (stm -> metodos .)
    STRING          reduce using rule 16 (stm -> metodos .)
    TRUE            reduce using rule 16 (stm -> metodos .)
    FALSE           reduce using rule 16 (stm -> metodos .)
    $end            reduce using rule 16 (stm -> metodos .)
    RBRACE          reduce using rule 16 (stm -> metodos .)


state 18

    (70) asignacion -> declaracion .

    SEMICOLON       reduce using rule 70 (asignacion -> declaracion .)
    IF              reduce using rule 70 (asignacion -> declaracion .)
    FOR             reduce using rule 70 (asignacion -> declaracion .)
    WHILE           reduce using rule 70 (asignacion -> declaracion .)
    ID              reduce using rule 70 (asignacion -> declaracion .)
    NUMBER          reduce using rule 70 (asignacion -> declaracion .)
    VAR             reduce using rule 70 (asignacion -> declaracion .)
    LET             reduce using rule 70 (asignacion -> declaracion .)
    PRINT           reduce using rule 70 (asignacion -> declaracion .)
    STRING          reduce using rule 70 (asignacion -> declaracion .)
    TRUE            reduce using rule 70 (asignacion -> declaracion .)
    FALSE           reduce using rule 70 (asignacion -> declaracion .)
    $end            reduce using rule 70 (asignacion -> declaracion .)
    RBRACE          reduce using rule 70 (asignacion -> declaracion .)


state 19

    (88) expresion -> NUMBER . operador NUMBER
    (107) factor -> NUMBER .
    (89) operador -> . MINUS
    (90) operador -> . PLUS
    (91) operador -> . DIVIDE
    (92) operador -> . TIMES
    (93) operador -> . MOD

    SEMICOLON       reduce using rule 107 (factor -> NUMBER .)
    IF              reduce using rule 107 (factor -> NUMBER .)
    FOR             reduce using rule 107 (factor -> NUMBER .)
    WHILE           reduce using rule 107 (factor -> NUMBER .)
    ID              reduce using rule 107 (factor -> NUMBER .)
    NUMBER          reduce using rule 107 (factor -> NUMBER .)
    VAR             reduce using rule 107 (factor -> NUMBER .)
    LET             reduce using rule 107 (factor -> NUMBER .)
    PRINT           reduce using rule 107 (factor -> NUMBER .)
    STRING          reduce using rule 107 (factor -> NUMBER .)
    TRUE            reduce using rule 107 (factor -> NUMBER .)
    FALSE           reduce using rule 107 (factor -> NUMBER .)
    $end            reduce using rule 107 (factor -> NUMBER .)
    RBRACE          reduce using rule 107 (factor -> NUMBER .)
    EQUALS          reduce using rule 107 (factor -> NUMBER .)
    NOTEQUALS       reduce using rule 107 (factor -> NUMBER .)
    STRICTEQUALS    reduce using rule 107 (factor -> NUMBER .)
    MORETHAN        reduce using rule 107 (factor -> NUMBER .)
    LESSTHAN        reduce using rule 107 (factor -> NUMBER .)
    MORETHANEQUALS  reduce using rule 107 (factor -> NUMBER .)
    LESSTHANEQUALS  reduce using rule 107 (factor -> NUMBER .)
    STRICTNOTEQUALS reduce using rule 107 (factor -> NUMBER .)
    AND             reduce using rule 107 (factor -> NUMBER .)
    OR              reduce using rule 107 (factor -> NUMBER .)
    RPAREN          reduce using rule 107 (factor -> NUMBER .)
    COMMA           reduce using rule 107 (factor -> NUMBER .)
    RBRACKET        reduce using rule 107 (factor -> NUMBER .)
    MINUS           shift and go to state 64
    PLUS            shift and go to state 65
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    MOD             shift and go to state 68

    operador                       shift and go to state 63

state 20

    (104) expresion -> term .

    SEMICOLON       reduce using rule 104 (expresion -> term .)
    IF              reduce using rule 104 (expresion -> term .)
    FOR             reduce using rule 104 (expresion -> term .)
    WHILE           reduce using rule 104 (expresion -> term .)
    ID              reduce using rule 104 (expresion -> term .)
    NUMBER          reduce using rule 104 (expresion -> term .)
    VAR             reduce using rule 104 (expresion -> term .)
    LET             reduce using rule 104 (expresion -> term .)
    PRINT           reduce using rule 104 (expresion -> term .)
    STRING          reduce using rule 104 (expresion -> term .)
    TRUE            reduce using rule 104 (expresion -> term .)
    FALSE           reduce using rule 104 (expresion -> term .)
    $end            reduce using rule 104 (expresion -> term .)
    RBRACE          reduce using rule 104 (expresion -> term .)
    EQUALS          reduce using rule 104 (expresion -> term .)
    NOTEQUALS       reduce using rule 104 (expresion -> term .)
    STRICTEQUALS    reduce using rule 104 (expresion -> term .)
    MORETHAN        reduce using rule 104 (expresion -> term .)
    LESSTHAN        reduce using rule 104 (expresion -> term .)
    MORETHANEQUALS  reduce using rule 104 (expresion -> term .)
    LESSTHANEQUALS  reduce using rule 104 (expresion -> term .)
    STRICTNOTEQUALS reduce using rule 104 (expresion -> term .)
    AND             reduce using rule 104 (expresion -> term .)
    OR              reduce using rule 104 (expresion -> term .)
    RPAREN          reduce using rule 104 (expresion -> term .)
    COMMA           reduce using rule 104 (expresion -> term .)
    RBRACKET        reduce using rule 104 (expresion -> term .)


state 21

    (17) metodos -> imprimir .

    SEMICOLON       reduce using rule 17 (metodos -> imprimir .)
    IF              reduce using rule 17 (metodos -> imprimir .)
    FOR             reduce using rule 17 (metodos -> imprimir .)
    WHILE           reduce using rule 17 (metodos -> imprimir .)
    ID              reduce using rule 17 (metodos -> imprimir .)
    NUMBER          reduce using rule 17 (metodos -> imprimir .)
    VAR             reduce using rule 17 (metodos -> imprimir .)
    LET             reduce using rule 17 (metodos -> imprimir .)
    PRINT           reduce using rule 17 (metodos -> imprimir .)
    STRING          reduce using rule 17 (metodos -> imprimir .)
    TRUE            reduce using rule 17 (metodos -> imprimir .)
    FALSE           reduce using rule 17 (metodos -> imprimir .)
    $end            reduce using rule 17 (metodos -> imprimir .)
    RBRACE          reduce using rule 17 (metodos -> imprimir .)


state 22

    (18) metodos -> touppercase .

    SEMICOLON       reduce using rule 18 (metodos -> touppercase .)
    IF              reduce using rule 18 (metodos -> touppercase .)
    FOR             reduce using rule 18 (metodos -> touppercase .)
    WHILE           reduce using rule 18 (metodos -> touppercase .)
    ID              reduce using rule 18 (metodos -> touppercase .)
    NUMBER          reduce using rule 18 (metodos -> touppercase .)
    VAR             reduce using rule 18 (metodos -> touppercase .)
    LET             reduce using rule 18 (metodos -> touppercase .)
    PRINT           reduce using rule 18 (metodos -> touppercase .)
    STRING          reduce using rule 18 (metodos -> touppercase .)
    TRUE            reduce using rule 18 (metodos -> touppercase .)
    FALSE           reduce using rule 18 (metodos -> touppercase .)
    $end            reduce using rule 18 (metodos -> touppercase .)
    RBRACE          reduce using rule 18 (metodos -> touppercase .)


state 23

    (19) metodos -> tolowercase .

    SEMICOLON       reduce using rule 19 (metodos -> tolowercase .)
    IF              reduce using rule 19 (metodos -> tolowercase .)
    FOR             reduce using rule 19 (metodos -> tolowercase .)
    WHILE           reduce using rule 19 (metodos -> tolowercase .)
    ID              reduce using rule 19 (metodos -> tolowercase .)
    NUMBER          reduce using rule 19 (metodos -> tolowercase .)
    VAR             reduce using rule 19 (metodos -> tolowercase .)
    LET             reduce using rule 19 (metodos -> tolowercase .)
    PRINT           reduce using rule 19 (metodos -> tolowercase .)
    STRING          reduce using rule 19 (metodos -> tolowercase .)
    TRUE            reduce using rule 19 (metodos -> tolowercase .)
    FALSE           reduce using rule 19 (metodos -> tolowercase .)
    $end            reduce using rule 19 (metodos -> tolowercase .)
    RBRACE          reduce using rule 19 (metodos -> tolowercase .)


state 24

    (20) metodos -> startwith .

    SEMICOLON       reduce using rule 20 (metodos -> startwith .)
    IF              reduce using rule 20 (metodos -> startwith .)
    FOR             reduce using rule 20 (metodos -> startwith .)
    WHILE           reduce using rule 20 (metodos -> startwith .)
    ID              reduce using rule 20 (metodos -> startwith .)
    NUMBER          reduce using rule 20 (metodos -> startwith .)
    VAR             reduce using rule 20 (metodos -> startwith .)
    LET             reduce using rule 20 (metodos -> startwith .)
    PRINT           reduce using rule 20 (metodos -> startwith .)
    STRING          reduce using rule 20 (metodos -> startwith .)
    TRUE            reduce using rule 20 (metodos -> startwith .)
    FALSE           reduce using rule 20 (metodos -> startwith .)
    $end            reduce using rule 20 (metodos -> startwith .)
    RBRACE          reduce using rule 20 (metodos -> startwith .)


state 25

    (21) metodos -> tostring .

    SEMICOLON       reduce using rule 21 (metodos -> tostring .)
    IF              reduce using rule 21 (metodos -> tostring .)
    FOR             reduce using rule 21 (metodos -> tostring .)
    WHILE           reduce using rule 21 (metodos -> tostring .)
    ID              reduce using rule 21 (metodos -> tostring .)
    NUMBER          reduce using rule 21 (metodos -> tostring .)
    VAR             reduce using rule 21 (metodos -> tostring .)
    LET             reduce using rule 21 (metodos -> tostring .)
    PRINT           reduce using rule 21 (metodos -> tostring .)
    STRING          reduce using rule 21 (metodos -> tostring .)
    TRUE            reduce using rule 21 (metodos -> tostring .)
    FALSE           reduce using rule 21 (metodos -> tostring .)
    $end            reduce using rule 21 (metodos -> tostring .)
    RBRACE          reduce using rule 21 (metodos -> tostring .)


state 26

    (22) metodos -> pop .

    SEMICOLON       reduce using rule 22 (metodos -> pop .)
    IF              reduce using rule 22 (metodos -> pop .)
    FOR             reduce using rule 22 (metodos -> pop .)
    WHILE           reduce using rule 22 (metodos -> pop .)
    ID              reduce using rule 22 (metodos -> pop .)
    NUMBER          reduce using rule 22 (metodos -> pop .)
    VAR             reduce using rule 22 (metodos -> pop .)
    LET             reduce using rule 22 (metodos -> pop .)
    PRINT           reduce using rule 22 (metodos -> pop .)
    STRING          reduce using rule 22 (metodos -> pop .)
    TRUE            reduce using rule 22 (metodos -> pop .)
    FALSE           reduce using rule 22 (metodos -> pop .)
    $end            reduce using rule 22 (metodos -> pop .)
    RBRACE          reduce using rule 22 (metodos -> pop .)


state 27

    (23) metodos -> push .

    SEMICOLON       reduce using rule 23 (metodos -> push .)
    IF              reduce using rule 23 (metodos -> push .)
    FOR             reduce using rule 23 (metodos -> push .)
    WHILE           reduce using rule 23 (metodos -> push .)
    ID              reduce using rule 23 (metodos -> push .)
    NUMBER          reduce using rule 23 (metodos -> push .)
    VAR             reduce using rule 23 (metodos -> push .)
    LET             reduce using rule 23 (metodos -> push .)
    PRINT           reduce using rule 23 (metodos -> push .)
    STRING          reduce using rule 23 (metodos -> push .)
    TRUE            reduce using rule 23 (metodos -> push .)
    FALSE           reduce using rule 23 (metodos -> push .)
    $end            reduce using rule 23 (metodos -> push .)
    RBRACE          reduce using rule 23 (metodos -> push .)


state 28

    (24) metodos -> shift .

    SEMICOLON       reduce using rule 24 (metodos -> shift .)
    IF              reduce using rule 24 (metodos -> shift .)
    FOR             reduce using rule 24 (metodos -> shift .)
    WHILE           reduce using rule 24 (metodos -> shift .)
    ID              reduce using rule 24 (metodos -> shift .)
    NUMBER          reduce using rule 24 (metodos -> shift .)
    VAR             reduce using rule 24 (metodos -> shift .)
    LET             reduce using rule 24 (metodos -> shift .)
    PRINT           reduce using rule 24 (metodos -> shift .)
    STRING          reduce using rule 24 (metodos -> shift .)
    TRUE            reduce using rule 24 (metodos -> shift .)
    FALSE           reduce using rule 24 (metodos -> shift .)
    $end            reduce using rule 24 (metodos -> shift .)
    RBRACE          reduce using rule 24 (metodos -> shift .)


state 29

    (25) metodos -> setdate .

    SEMICOLON       reduce using rule 25 (metodos -> setdate .)
    IF              reduce using rule 25 (metodos -> setdate .)
    FOR             reduce using rule 25 (metodos -> setdate .)
    WHILE           reduce using rule 25 (metodos -> setdate .)
    ID              reduce using rule 25 (metodos -> setdate .)
    NUMBER          reduce using rule 25 (metodos -> setdate .)
    VAR             reduce using rule 25 (metodos -> setdate .)
    LET             reduce using rule 25 (metodos -> setdate .)
    PRINT           reduce using rule 25 (metodos -> setdate .)
    STRING          reduce using rule 25 (metodos -> setdate .)
    TRUE            reduce using rule 25 (metodos -> setdate .)
    FALSE           reduce using rule 25 (metodos -> setdate .)
    $end            reduce using rule 25 (metodos -> setdate .)
    RBRACE          reduce using rule 25 (metodos -> setdate .)


state 30

    (26) metodos -> getfullyear .

    SEMICOLON       reduce using rule 26 (metodos -> getfullyear .)
    IF              reduce using rule 26 (metodos -> getfullyear .)
    FOR             reduce using rule 26 (metodos -> getfullyear .)
    WHILE           reduce using rule 26 (metodos -> getfullyear .)
    ID              reduce using rule 26 (metodos -> getfullyear .)
    NUMBER          reduce using rule 26 (metodos -> getfullyear .)
    VAR             reduce using rule 26 (metodos -> getfullyear .)
    LET             reduce using rule 26 (metodos -> getfullyear .)
    PRINT           reduce using rule 26 (metodos -> getfullyear .)
    STRING          reduce using rule 26 (metodos -> getfullyear .)
    TRUE            reduce using rule 26 (metodos -> getfullyear .)
    FALSE           reduce using rule 26 (metodos -> getfullyear .)
    $end            reduce using rule 26 (metodos -> getfullyear .)
    RBRACE          reduce using rule 26 (metodos -> getfullyear .)


state 31

    (27) metodos -> has .

    SEMICOLON       reduce using rule 27 (metodos -> has .)
    IF              reduce using rule 27 (metodos -> has .)
    FOR             reduce using rule 27 (metodos -> has .)
    WHILE           reduce using rule 27 (metodos -> has .)
    ID              reduce using rule 27 (metodos -> has .)
    NUMBER          reduce using rule 27 (metodos -> has .)
    VAR             reduce using rule 27 (metodos -> has .)
    LET             reduce using rule 27 (metodos -> has .)
    PRINT           reduce using rule 27 (metodos -> has .)
    STRING          reduce using rule 27 (metodos -> has .)
    TRUE            reduce using rule 27 (metodos -> has .)
    FALSE           reduce using rule 27 (metodos -> has .)
    $end            reduce using rule 27 (metodos -> has .)
    RBRACE          reduce using rule 27 (metodos -> has .)


state 32

    (28) metodos -> intersection .

    SEMICOLON       reduce using rule 28 (metodos -> intersection .)
    IF              reduce using rule 28 (metodos -> intersection .)
    FOR             reduce using rule 28 (metodos -> intersection .)
    WHILE           reduce using rule 28 (metodos -> intersection .)
    ID              reduce using rule 28 (metodos -> intersection .)
    NUMBER          reduce using rule 28 (metodos -> intersection .)
    VAR             reduce using rule 28 (metodos -> intersection .)
    LET             reduce using rule 28 (metodos -> intersection .)
    PRINT           reduce using rule 28 (metodos -> intersection .)
    STRING          reduce using rule 28 (metodos -> intersection .)
    TRUE            reduce using rule 28 (metodos -> intersection .)
    FALSE           reduce using rule 28 (metodos -> intersection .)
    $end            reduce using rule 28 (metodos -> intersection .)
    RBRACE          reduce using rule 28 (metodos -> intersection .)


state 33

    (29) metodos -> union .

    SEMICOLON       reduce using rule 29 (metodos -> union .)
    IF              reduce using rule 29 (metodos -> union .)
    FOR             reduce using rule 29 (metodos -> union .)
    WHILE           reduce using rule 29 (metodos -> union .)
    ID              reduce using rule 29 (metodos -> union .)
    NUMBER          reduce using rule 29 (metodos -> union .)
    VAR             reduce using rule 29 (metodos -> union .)
    LET             reduce using rule 29 (metodos -> union .)
    PRINT           reduce using rule 29 (metodos -> union .)
    STRING          reduce using rule 29 (metodos -> union .)
    TRUE            reduce using rule 29 (metodos -> union .)
    FALSE           reduce using rule 29 (metodos -> union .)
    $end            reduce using rule 29 (metodos -> union .)
    RBRACE          reduce using rule 29 (metodos -> union .)


state 34

    (86) type -> VAR .

    ID              reduce using rule 86 (type -> VAR .)


state 35

    (87) type -> LET .

    ID              reduce using rule 87 (type -> LET .)


state 36

    (105) term -> factor .

    SEMICOLON       reduce using rule 105 (term -> factor .)
    IF              reduce using rule 105 (term -> factor .)
    FOR             reduce using rule 105 (term -> factor .)
    WHILE           reduce using rule 105 (term -> factor .)
    ID              reduce using rule 105 (term -> factor .)
    NUMBER          reduce using rule 105 (term -> factor .)
    VAR             reduce using rule 105 (term -> factor .)
    LET             reduce using rule 105 (term -> factor .)
    PRINT           reduce using rule 105 (term -> factor .)
    STRING          reduce using rule 105 (term -> factor .)
    TRUE            reduce using rule 105 (term -> factor .)
    FALSE           reduce using rule 105 (term -> factor .)
    $end            reduce using rule 105 (term -> factor .)
    RBRACE          reduce using rule 105 (term -> factor .)
    EQUALS          reduce using rule 105 (term -> factor .)
    NOTEQUALS       reduce using rule 105 (term -> factor .)
    STRICTEQUALS    reduce using rule 105 (term -> factor .)
    MORETHAN        reduce using rule 105 (term -> factor .)
    LESSTHAN        reduce using rule 105 (term -> factor .)
    MORETHANEQUALS  reduce using rule 105 (term -> factor .)
    LESSTHANEQUALS  reduce using rule 105 (term -> factor .)
    STRICTNOTEQUALS reduce using rule 105 (term -> factor .)
    AND             reduce using rule 105 (term -> factor .)
    OR              reduce using rule 105 (term -> factor .)
    RPAREN          reduce using rule 105 (term -> factor .)
    COMMA           reduce using rule 105 (term -> factor .)
    RBRACKET        reduce using rule 105 (term -> factor .)


state 37

    (30) imprimir -> PRINT . LPAREN factor RPAREN

    LPAREN          shift and go to state 69


state 38

    (108) factor -> STRING .

    SEMICOLON       reduce using rule 108 (factor -> STRING .)
    IF              reduce using rule 108 (factor -> STRING .)
    FOR             reduce using rule 108 (factor -> STRING .)
    WHILE           reduce using rule 108 (factor -> STRING .)
    ID              reduce using rule 108 (factor -> STRING .)
    NUMBER          reduce using rule 108 (factor -> STRING .)
    VAR             reduce using rule 108 (factor -> STRING .)
    LET             reduce using rule 108 (factor -> STRING .)
    PRINT           reduce using rule 108 (factor -> STRING .)
    STRING          reduce using rule 108 (factor -> STRING .)
    TRUE            reduce using rule 108 (factor -> STRING .)
    FALSE           reduce using rule 108 (factor -> STRING .)
    $end            reduce using rule 108 (factor -> STRING .)
    RBRACE          reduce using rule 108 (factor -> STRING .)
    EQUALS          reduce using rule 108 (factor -> STRING .)
    NOTEQUALS       reduce using rule 108 (factor -> STRING .)
    STRICTEQUALS    reduce using rule 108 (factor -> STRING .)
    MORETHAN        reduce using rule 108 (factor -> STRING .)
    LESSTHAN        reduce using rule 108 (factor -> STRING .)
    MORETHANEQUALS  reduce using rule 108 (factor -> STRING .)
    LESSTHANEQUALS  reduce using rule 108 (factor -> STRING .)
    STRICTNOTEQUALS reduce using rule 108 (factor -> STRING .)
    AND             reduce using rule 108 (factor -> STRING .)
    OR              reduce using rule 108 (factor -> STRING .)
    RPAREN          reduce using rule 108 (factor -> STRING .)
    COMMA           reduce using rule 108 (factor -> STRING .)
    RBRACKET        reduce using rule 108 (factor -> STRING .)


state 39

    (109) factor -> TRUE .

    SEMICOLON       reduce using rule 109 (factor -> TRUE .)
    IF              reduce using rule 109 (factor -> TRUE .)
    FOR             reduce using rule 109 (factor -> TRUE .)
    WHILE           reduce using rule 109 (factor -> TRUE .)
    ID              reduce using rule 109 (factor -> TRUE .)
    NUMBER          reduce using rule 109 (factor -> TRUE .)
    VAR             reduce using rule 109 (factor -> TRUE .)
    LET             reduce using rule 109 (factor -> TRUE .)
    PRINT           reduce using rule 109 (factor -> TRUE .)
    STRING          reduce using rule 109 (factor -> TRUE .)
    TRUE            reduce using rule 109 (factor -> TRUE .)
    FALSE           reduce using rule 109 (factor -> TRUE .)
    $end            reduce using rule 109 (factor -> TRUE .)
    RBRACE          reduce using rule 109 (factor -> TRUE .)
    RPAREN          reduce using rule 109 (factor -> TRUE .)
    COMMA           reduce using rule 109 (factor -> TRUE .)
    RBRACKET        reduce using rule 109 (factor -> TRUE .)


state 40

    (110) factor -> FALSE .

    SEMICOLON       reduce using rule 110 (factor -> FALSE .)
    IF              reduce using rule 110 (factor -> FALSE .)
    FOR             reduce using rule 110 (factor -> FALSE .)
    WHILE           reduce using rule 110 (factor -> FALSE .)
    ID              reduce using rule 110 (factor -> FALSE .)
    NUMBER          reduce using rule 110 (factor -> FALSE .)
    VAR             reduce using rule 110 (factor -> FALSE .)
    LET             reduce using rule 110 (factor -> FALSE .)
    PRINT           reduce using rule 110 (factor -> FALSE .)
    STRING          reduce using rule 110 (factor -> FALSE .)
    TRUE            reduce using rule 110 (factor -> FALSE .)
    FALSE           reduce using rule 110 (factor -> FALSE .)
    $end            reduce using rule 110 (factor -> FALSE .)
    RBRACE          reduce using rule 110 (factor -> FALSE .)
    RPAREN          reduce using rule 110 (factor -> FALSE .)
    COMMA           reduce using rule 110 (factor -> FALSE .)
    RBRACKET        reduce using rule 110 (factor -> FALSE .)


state 41

    (5) sentencias -> statement sentencias .

    $end            reduce using rule 5 (sentencias -> statement sentencias .)
    RBRACE          reduce using rule 5 (sentencias -> statement sentencias .)


state 42

    (6) sentencias -> if sentencias .

    $end            reduce using rule 6 (sentencias -> if sentencias .)
    RBRACE          reduce using rule 6 (sentencias -> if sentencias .)


state 43

    (8) sentencias -> for sentencias .

    $end            reduce using rule 8 (sentencias -> for sentencias .)
    RBRACE          reduce using rule 8 (sentencias -> for sentencias .)


state 44

    (7) sentencias -> while sentencias .

    $end            reduce using rule 7 (sentencias -> while sentencias .)
    RBRACE          reduce using rule 7 (sentencias -> while sentencias .)


state 45

    (10) statement -> stm SEMICOLON .

    IF              reduce using rule 10 (statement -> stm SEMICOLON .)
    FOR             reduce using rule 10 (statement -> stm SEMICOLON .)
    WHILE           reduce using rule 10 (statement -> stm SEMICOLON .)
    ID              reduce using rule 10 (statement -> stm SEMICOLON .)
    NUMBER          reduce using rule 10 (statement -> stm SEMICOLON .)
    VAR             reduce using rule 10 (statement -> stm SEMICOLON .)
    LET             reduce using rule 10 (statement -> stm SEMICOLON .)
    PRINT           reduce using rule 10 (statement -> stm SEMICOLON .)
    STRING          reduce using rule 10 (statement -> stm SEMICOLON .)
    TRUE            reduce using rule 10 (statement -> stm SEMICOLON .)
    FALSE           reduce using rule 10 (statement -> stm SEMICOLON .)
    $end            reduce using rule 10 (statement -> stm SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> stm SEMICOLON .)


state 46

    (56) if -> IF LPAREN . condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> IF LPAREN . condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> IF LPAREN . condicion RPAREN LBRACE sentencias RBRACE elseif
    (59) condicion -> . TRUE
    (60) condicion -> . FALSE
    (61) condicion -> . NOT expresion
    (62) condicion -> . expresion operadorlogico expresion
    (63) condicion -> . LPAREN condicion RPAREN operadorlogico expresion
    (64) condicion -> . expresion operadorlogico LPAREN condicion RPAREN
    (65) condicion -> . expresion operador_comparison expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    NOT             shift and go to state 74
    LPAREN          shift and go to state 70
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38

    condicion                      shift and go to state 71
    expresion                      shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 47

    (68) for -> FOR LPAREN . type ID OF ID RPAREN LBRACE sentencias RBRACE
    (86) type -> . VAR
    (87) type -> . LET

    VAR             shift and go to state 34
    LET             shift and go to state 35

    type                           shift and go to state 77

state 48

    (71) asignacion_date -> type ID . EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> type ID . EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> type ID . EQUAL LBRACKET RBRACKET
    (74) array -> type ID . EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> type ID . EQUAL NEW SET LPAREN RPAREN
    (76) set -> type ID . EQUAL NEW SET LPAREN set_parametro RPAREN
    (81) declaracion -> type ID . EQUAL expresion
    (32) touppercase -> type ID . EQUAL ID TOUPPERCASE LPAREN RPAREN
    (34) tolowercase -> type ID . EQUAL ID TOLOWERCASE LPAREN RPAREN
    (36) startwith -> type ID . EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (38) tostring -> type ID . EQUAL ID TOSTRING LPAREN RPAREN
    (40) pop -> type ID . EQUAL ID POP LPAREN RPAREN
    (42) push -> type ID . EQUAL ID PUSH LPAREN factor RPAREN
    (44) shift -> type ID . EQUAL ID SHIFT LPAREN RPAREN
    (46) setdate -> type ID . EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (48) getfullyear -> type ID . EQUAL ID GETFULLYEAR LPAREN RPAREN
    (50) has -> type ID . EQUAL ID HAS LPAREN factor RPAREN
    (52) intersection -> type ID . EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (54) union -> type ID . EQUAL ID UNION LPAREN set_parametro RPAREN

    EQUAL           shift and go to state 78


state 49

    (69) asignacion -> ID EQUAL . expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 79
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 50

    (31) touppercase -> ID TOUPPERCASE . LPAREN RPAREN

    LPAREN          shift and go to state 80


state 51

    (33) tolowercase -> ID TOLOWERCASE . LPAREN RPAREN

    LPAREN          shift and go to state 81


state 52

    (35) startwith -> ID STARTSWITH . LPAREN STRING RPAREN

    LPAREN          shift and go to state 82


state 53

    (37) tostring -> ID TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 83


state 54

    (39) pop -> ID POP . LPAREN RPAREN

    LPAREN          shift and go to state 84


state 55

    (41) push -> ID PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 85


state 56

    (43) shift -> ID SHIFT . LPAREN RPAREN

    LPAREN          shift and go to state 86


state 57

    (45) setdate -> ID SETDATE . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 87


state 58

    (47) getfullyear -> ID GETFULLYEAR . LPAREN RPAREN

    LPAREN          shift and go to state 88


state 59

    (49) has -> ID HAS . LPAREN factor RPAREN

    LPAREN          shift and go to state 89


state 60

    (51) intersection -> ID INTERSECTION . LPAREN set_parametro RPAREN

    LPAREN          shift and go to state 90


state 61

    (53) union -> ID UNION . LPAREN set_parametro RPAREN

    LPAREN          shift and go to state 91


state 62

    (55) while -> WHILE LPAREN . condicion RPAREN LBRACE sentencias RBRACE
    (59) condicion -> . TRUE
    (60) condicion -> . FALSE
    (61) condicion -> . NOT expresion
    (62) condicion -> . expresion operadorlogico expresion
    (63) condicion -> . LPAREN condicion RPAREN operadorlogico expresion
    (64) condicion -> . expresion operadorlogico LPAREN condicion RPAREN
    (65) condicion -> . expresion operador_comparison expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    NOT             shift and go to state 74
    LPAREN          shift and go to state 70
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38

    condicion                      shift and go to state 92
    expresion                      shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 63

    (88) expresion -> NUMBER operador . NUMBER

    NUMBER          shift and go to state 93


state 64

    (89) operador -> MINUS .

    NUMBER          reduce using rule 89 (operador -> MINUS .)


state 65

    (90) operador -> PLUS .

    NUMBER          reduce using rule 90 (operador -> PLUS .)


state 66

    (91) operador -> DIVIDE .

    NUMBER          reduce using rule 91 (operador -> DIVIDE .)


state 67

    (92) operador -> TIMES .

    NUMBER          reduce using rule 92 (operador -> TIMES .)


state 68

    (93) operador -> MOD .

    NUMBER          reduce using rule 93 (operador -> MOD .)


state 69

    (30) imprimir -> PRINT LPAREN . factor RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    ID              shift and go to state 76
    NUMBER          shift and go to state 95
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 94

state 70

    (63) condicion -> LPAREN . condicion RPAREN operadorlogico expresion
    (59) condicion -> . TRUE
    (60) condicion -> . FALSE
    (61) condicion -> . NOT expresion
    (62) condicion -> . expresion operadorlogico expresion
    (63) condicion -> . LPAREN condicion RPAREN operadorlogico expresion
    (64) condicion -> . expresion operadorlogico LPAREN condicion RPAREN
    (65) condicion -> . expresion operador_comparison expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    NOT             shift and go to state 74
    LPAREN          shift and go to state 70
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38

    condicion                      shift and go to state 96
    expresion                      shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 71

    (56) if -> IF LPAREN condicion . RPAREN LBRACE sentencias RBRACE
    (57) if -> IF LPAREN condicion . RPAREN LBRACE sentencias RBRACE else
    (58) if -> IF LPAREN condicion . RPAREN LBRACE sentencias RBRACE elseif

    RPAREN          shift and go to state 97


state 72

    (59) condicion -> TRUE .
    (109) factor -> TRUE .

    RPAREN          reduce using rule 59 (condicion -> TRUE .)
    EQUALS          reduce using rule 109 (factor -> TRUE .)
    NOTEQUALS       reduce using rule 109 (factor -> TRUE .)
    STRICTEQUALS    reduce using rule 109 (factor -> TRUE .)
    MORETHAN        reduce using rule 109 (factor -> TRUE .)
    LESSTHAN        reduce using rule 109 (factor -> TRUE .)
    MORETHANEQUALS  reduce using rule 109 (factor -> TRUE .)
    LESSTHANEQUALS  reduce using rule 109 (factor -> TRUE .)
    STRICTNOTEQUALS reduce using rule 109 (factor -> TRUE .)
    AND             reduce using rule 109 (factor -> TRUE .)
    OR              reduce using rule 109 (factor -> TRUE .)


state 73

    (60) condicion -> FALSE .
    (110) factor -> FALSE .

    RPAREN          reduce using rule 60 (condicion -> FALSE .)
    EQUALS          reduce using rule 110 (factor -> FALSE .)
    NOTEQUALS       reduce using rule 110 (factor -> FALSE .)
    STRICTEQUALS    reduce using rule 110 (factor -> FALSE .)
    MORETHAN        reduce using rule 110 (factor -> FALSE .)
    LESSTHAN        reduce using rule 110 (factor -> FALSE .)
    MORETHANEQUALS  reduce using rule 110 (factor -> FALSE .)
    LESSTHANEQUALS  reduce using rule 110 (factor -> FALSE .)
    STRICTNOTEQUALS reduce using rule 110 (factor -> FALSE .)
    AND             reduce using rule 110 (factor -> FALSE .)
    OR              reduce using rule 110 (factor -> FALSE .)


state 74

    (61) condicion -> NOT . expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 98
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 75

    (62) condicion -> expresion . operadorlogico expresion
    (64) condicion -> expresion . operadorlogico LPAREN condicion RPAREN
    (65) condicion -> expresion . operador_comparison expresion
    (94) operadorlogico -> . EQUALS
    (95) operadorlogico -> . NOTEQUALS
    (96) operadorlogico -> . STRICTEQUALS
    (97) operadorlogico -> . MORETHAN
    (98) operadorlogico -> . LESSTHAN
    (99) operadorlogico -> . MORETHANEQUALS
    (100) operadorlogico -> . LESSTHANEQUALS
    (101) operadorlogico -> . STRICTNOTEQUALS
    (102) operador_comparison -> . AND
    (103) operador_comparison -> . OR

    EQUALS          shift and go to state 101
    NOTEQUALS       shift and go to state 102
    STRICTEQUALS    shift and go to state 103
    MORETHAN        shift and go to state 104
    LESSTHAN        shift and go to state 105
    MORETHANEQUALS  shift and go to state 106
    LESSTHANEQUALS  shift and go to state 107
    STRICTNOTEQUALS shift and go to state 108
    AND             shift and go to state 109
    OR              shift and go to state 110

    operadorlogico                 shift and go to state 99
    operador_comparison            shift and go to state 100

state 76

    (106) factor -> ID .

    EQUALS          reduce using rule 106 (factor -> ID .)
    NOTEQUALS       reduce using rule 106 (factor -> ID .)
    STRICTEQUALS    reduce using rule 106 (factor -> ID .)
    MORETHAN        reduce using rule 106 (factor -> ID .)
    LESSTHAN        reduce using rule 106 (factor -> ID .)
    MORETHANEQUALS  reduce using rule 106 (factor -> ID .)
    LESSTHANEQUALS  reduce using rule 106 (factor -> ID .)
    STRICTNOTEQUALS reduce using rule 106 (factor -> ID .)
    AND             reduce using rule 106 (factor -> ID .)
    OR              reduce using rule 106 (factor -> ID .)
    SEMICOLON       reduce using rule 106 (factor -> ID .)
    IF              reduce using rule 106 (factor -> ID .)
    FOR             reduce using rule 106 (factor -> ID .)
    WHILE           reduce using rule 106 (factor -> ID .)
    ID              reduce using rule 106 (factor -> ID .)
    NUMBER          reduce using rule 106 (factor -> ID .)
    VAR             reduce using rule 106 (factor -> ID .)
    LET             reduce using rule 106 (factor -> ID .)
    PRINT           reduce using rule 106 (factor -> ID .)
    STRING          reduce using rule 106 (factor -> ID .)
    TRUE            reduce using rule 106 (factor -> ID .)
    FALSE           reduce using rule 106 (factor -> ID .)
    $end            reduce using rule 106 (factor -> ID .)
    RBRACE          reduce using rule 106 (factor -> ID .)
    RPAREN          reduce using rule 106 (factor -> ID .)
    COMMA           reduce using rule 106 (factor -> ID .)
    RBRACKET        reduce using rule 106 (factor -> ID .)


state 77

    (68) for -> FOR LPAREN type . ID OF ID RPAREN LBRACE sentencias RBRACE

    ID              shift and go to state 111


state 78

    (71) asignacion_date -> type ID EQUAL . NEW DATE LPAREN RPAREN
    (72) asignacion_date -> type ID EQUAL . NEW DATE LPAREN date_param RPAREN
    (73) array -> type ID EQUAL . LBRACKET RBRACKET
    (74) array -> type ID EQUAL . LBRACKET arr_parametro RBRACKET
    (75) set -> type ID EQUAL . NEW SET LPAREN RPAREN
    (76) set -> type ID EQUAL . NEW SET LPAREN set_parametro RPAREN
    (81) declaracion -> type ID EQUAL . expresion
    (32) touppercase -> type ID EQUAL . ID TOUPPERCASE LPAREN RPAREN
    (34) tolowercase -> type ID EQUAL . ID TOLOWERCASE LPAREN RPAREN
    (36) startwith -> type ID EQUAL . ID STARTSWITH LPAREN STRING RPAREN
    (38) tostring -> type ID EQUAL . ID TOSTRING LPAREN RPAREN
    (40) pop -> type ID EQUAL . ID POP LPAREN RPAREN
    (42) push -> type ID EQUAL . ID PUSH LPAREN factor RPAREN
    (44) shift -> type ID EQUAL . ID SHIFT LPAREN RPAREN
    (46) setdate -> type ID EQUAL . ID SETDATE LPAREN NUMBER RPAREN
    (48) getfullyear -> type ID EQUAL . ID GETFULLYEAR LPAREN RPAREN
    (50) has -> type ID EQUAL . ID HAS LPAREN factor RPAREN
    (52) intersection -> type ID EQUAL . ID INTERSECTION LPAREN set_parametro RPAREN
    (54) union -> type ID EQUAL . ID UNION LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NEW             shift and go to state 113
    LBRACKET        shift and go to state 114
    ID              shift and go to state 112
    NUMBER          shift and go to state 19
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 115
    factor                         shift and go to state 36
    term                           shift and go to state 20

state 79

    (69) asignacion -> ID EQUAL expresion .

    SEMICOLON       reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    IF              reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    FOR             reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    WHILE           reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    ID              reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    NUMBER          reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    VAR             reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    LET             reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    PRINT           reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    STRING          reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    TRUE            reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    FALSE           reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    $end            reduce using rule 69 (asignacion -> ID EQUAL expresion .)
    RBRACE          reduce using rule 69 (asignacion -> ID EQUAL expresion .)


state 80

    (31) touppercase -> ID TOUPPERCASE LPAREN . RPAREN

    RPAREN          shift and go to state 116


state 81

    (33) tolowercase -> ID TOLOWERCASE LPAREN . RPAREN

    RPAREN          shift and go to state 117


state 82

    (35) startwith -> ID STARTSWITH LPAREN . STRING RPAREN

    STRING          shift and go to state 118


state 83

    (37) tostring -> ID TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 119


state 84

    (39) pop -> ID POP LPAREN . RPAREN

    RPAREN          shift and go to state 120


state 85

    (41) push -> ID PUSH LPAREN . factor RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    ID              shift and go to state 76
    NUMBER          shift and go to state 95
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 121

state 86

    (43) shift -> ID SHIFT LPAREN . RPAREN

    RPAREN          shift and go to state 122


state 87

    (45) setdate -> ID SETDATE LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 123


state 88

    (47) getfullyear -> ID GETFULLYEAR LPAREN . RPAREN

    RPAREN          shift and go to state 124


state 89

    (49) has -> ID HAS LPAREN . factor RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    ID              shift and go to state 76
    NUMBER          shift and go to state 95
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 125

state 90

    (51) intersection -> ID INTERSECTION LPAREN . set_parametro RPAREN
    (79) set_parametro -> . LBRACKET arr_parametro RBRACKET
    (80) set_parametro -> . ID

    LBRACKET        shift and go to state 128
    ID              shift and go to state 126

    set_parametro                  shift and go to state 127

state 91

    (53) union -> ID UNION LPAREN . set_parametro RPAREN
    (79) set_parametro -> . LBRACKET arr_parametro RBRACKET
    (80) set_parametro -> . ID

    LBRACKET        shift and go to state 128
    ID              shift and go to state 126

    set_parametro                  shift and go to state 129

state 92

    (55) while -> WHILE LPAREN condicion . RPAREN LBRACE sentencias RBRACE

    RPAREN          shift and go to state 130


state 93

    (88) expresion -> NUMBER operador NUMBER .

    SEMICOLON       reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    IF              reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    FOR             reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    WHILE           reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    ID              reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    NUMBER          reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    VAR             reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    LET             reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    PRINT           reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    STRING          reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    TRUE            reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    FALSE           reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    $end            reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    RBRACE          reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    EQUALS          reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    NOTEQUALS       reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    STRICTEQUALS    reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    MORETHAN        reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    LESSTHAN        reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    MORETHANEQUALS  reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    LESSTHANEQUALS  reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    STRICTNOTEQUALS reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    AND             reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    OR              reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    RPAREN          reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    COMMA           reduce using rule 88 (expresion -> NUMBER operador NUMBER .)
    RBRACKET        reduce using rule 88 (expresion -> NUMBER operador NUMBER .)


state 94

    (30) imprimir -> PRINT LPAREN factor . RPAREN

    RPAREN          shift and go to state 131


state 95

    (107) factor -> NUMBER .

    RPAREN          reduce using rule 107 (factor -> NUMBER .)


state 96

    (63) condicion -> LPAREN condicion . RPAREN operadorlogico expresion

    RPAREN          shift and go to state 132


state 97

    (56) if -> IF LPAREN condicion RPAREN . LBRACE sentencias RBRACE
    (57) if -> IF LPAREN condicion RPAREN . LBRACE sentencias RBRACE else
    (58) if -> IF LPAREN condicion RPAREN . LBRACE sentencias RBRACE elseif

    LBRACE          shift and go to state 133


state 98

    (61) condicion -> NOT expresion .

    RPAREN          reduce using rule 61 (condicion -> NOT expresion .)


state 99

    (62) condicion -> expresion operadorlogico . expresion
    (64) condicion -> expresion operadorlogico . LPAREN condicion RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    LPAREN          shift and go to state 135
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 134
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 100

    (65) condicion -> expresion operador_comparison . expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 136
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 101

    (94) operadorlogico -> EQUALS .

    LPAREN          reduce using rule 94 (operadorlogico -> EQUALS .)
    NUMBER          reduce using rule 94 (operadorlogico -> EQUALS .)
    ID              reduce using rule 94 (operadorlogico -> EQUALS .)
    STRING          reduce using rule 94 (operadorlogico -> EQUALS .)
    TRUE            reduce using rule 94 (operadorlogico -> EQUALS .)
    FALSE           reduce using rule 94 (operadorlogico -> EQUALS .)


state 102

    (95) operadorlogico -> NOTEQUALS .

    LPAREN          reduce using rule 95 (operadorlogico -> NOTEQUALS .)
    NUMBER          reduce using rule 95 (operadorlogico -> NOTEQUALS .)
    ID              reduce using rule 95 (operadorlogico -> NOTEQUALS .)
    STRING          reduce using rule 95 (operadorlogico -> NOTEQUALS .)
    TRUE            reduce using rule 95 (operadorlogico -> NOTEQUALS .)
    FALSE           reduce using rule 95 (operadorlogico -> NOTEQUALS .)


state 103

    (96) operadorlogico -> STRICTEQUALS .

    LPAREN          reduce using rule 96 (operadorlogico -> STRICTEQUALS .)
    NUMBER          reduce using rule 96 (operadorlogico -> STRICTEQUALS .)
    ID              reduce using rule 96 (operadorlogico -> STRICTEQUALS .)
    STRING          reduce using rule 96 (operadorlogico -> STRICTEQUALS .)
    TRUE            reduce using rule 96 (operadorlogico -> STRICTEQUALS .)
    FALSE           reduce using rule 96 (operadorlogico -> STRICTEQUALS .)


state 104

    (97) operadorlogico -> MORETHAN .

    LPAREN          reduce using rule 97 (operadorlogico -> MORETHAN .)
    NUMBER          reduce using rule 97 (operadorlogico -> MORETHAN .)
    ID              reduce using rule 97 (operadorlogico -> MORETHAN .)
    STRING          reduce using rule 97 (operadorlogico -> MORETHAN .)
    TRUE            reduce using rule 97 (operadorlogico -> MORETHAN .)
    FALSE           reduce using rule 97 (operadorlogico -> MORETHAN .)


state 105

    (98) operadorlogico -> LESSTHAN .

    LPAREN          reduce using rule 98 (operadorlogico -> LESSTHAN .)
    NUMBER          reduce using rule 98 (operadorlogico -> LESSTHAN .)
    ID              reduce using rule 98 (operadorlogico -> LESSTHAN .)
    STRING          reduce using rule 98 (operadorlogico -> LESSTHAN .)
    TRUE            reduce using rule 98 (operadorlogico -> LESSTHAN .)
    FALSE           reduce using rule 98 (operadorlogico -> LESSTHAN .)


state 106

    (99) operadorlogico -> MORETHANEQUALS .

    LPAREN          reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)
    NUMBER          reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)
    ID              reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)
    STRING          reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)
    TRUE            reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)
    FALSE           reduce using rule 99 (operadorlogico -> MORETHANEQUALS .)


state 107

    (100) operadorlogico -> LESSTHANEQUALS .

    LPAREN          reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)
    NUMBER          reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)
    ID              reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)
    STRING          reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)
    TRUE            reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)
    FALSE           reduce using rule 100 (operadorlogico -> LESSTHANEQUALS .)


state 108

    (101) operadorlogico -> STRICTNOTEQUALS .

    LPAREN          reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)
    NUMBER          reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)
    ID              reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)
    STRING          reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)
    TRUE            reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)
    FALSE           reduce using rule 101 (operadorlogico -> STRICTNOTEQUALS .)


state 109

    (102) operador_comparison -> AND .

    NUMBER          reduce using rule 102 (operador_comparison -> AND .)
    ID              reduce using rule 102 (operador_comparison -> AND .)
    STRING          reduce using rule 102 (operador_comparison -> AND .)
    TRUE            reduce using rule 102 (operador_comparison -> AND .)
    FALSE           reduce using rule 102 (operador_comparison -> AND .)


state 110

    (103) operador_comparison -> OR .

    NUMBER          reduce using rule 103 (operador_comparison -> OR .)
    ID              reduce using rule 103 (operador_comparison -> OR .)
    STRING          reduce using rule 103 (operador_comparison -> OR .)
    TRUE            reduce using rule 103 (operador_comparison -> OR .)
    FALSE           reduce using rule 103 (operador_comparison -> OR .)


state 111

    (68) for -> FOR LPAREN type ID . OF ID RPAREN LBRACE sentencias RBRACE

    OF              shift and go to state 137


state 112

    (32) touppercase -> type ID EQUAL ID . TOUPPERCASE LPAREN RPAREN
    (34) tolowercase -> type ID EQUAL ID . TOLOWERCASE LPAREN RPAREN
    (36) startwith -> type ID EQUAL ID . STARTSWITH LPAREN STRING RPAREN
    (38) tostring -> type ID EQUAL ID . TOSTRING LPAREN RPAREN
    (40) pop -> type ID EQUAL ID . POP LPAREN RPAREN
    (42) push -> type ID EQUAL ID . PUSH LPAREN factor RPAREN
    (44) shift -> type ID EQUAL ID . SHIFT LPAREN RPAREN
    (46) setdate -> type ID EQUAL ID . SETDATE LPAREN NUMBER RPAREN
    (48) getfullyear -> type ID EQUAL ID . GETFULLYEAR LPAREN RPAREN
    (50) has -> type ID EQUAL ID . HAS LPAREN factor RPAREN
    (52) intersection -> type ID EQUAL ID . INTERSECTION LPAREN set_parametro RPAREN
    (54) union -> type ID EQUAL ID . UNION LPAREN set_parametro RPAREN
    (106) factor -> ID .

    TOUPPERCASE     shift and go to state 138
    TOLOWERCASE     shift and go to state 139
    STARTSWITH      shift and go to state 140
    TOSTRING        shift and go to state 141
    POP             shift and go to state 142
    PUSH            shift and go to state 143
    SHIFT           shift and go to state 144
    SETDATE         shift and go to state 145
    GETFULLYEAR     shift and go to state 146
    HAS             shift and go to state 147
    INTERSECTION    shift and go to state 148
    UNION           shift and go to state 149
    SEMICOLON       reduce using rule 106 (factor -> ID .)
    IF              reduce using rule 106 (factor -> ID .)
    FOR             reduce using rule 106 (factor -> ID .)
    WHILE           reduce using rule 106 (factor -> ID .)
    ID              reduce using rule 106 (factor -> ID .)
    NUMBER          reduce using rule 106 (factor -> ID .)
    VAR             reduce using rule 106 (factor -> ID .)
    LET             reduce using rule 106 (factor -> ID .)
    PRINT           reduce using rule 106 (factor -> ID .)
    STRING          reduce using rule 106 (factor -> ID .)
    TRUE            reduce using rule 106 (factor -> ID .)
    FALSE           reduce using rule 106 (factor -> ID .)
    $end            reduce using rule 106 (factor -> ID .)
    RBRACE          reduce using rule 106 (factor -> ID .)


state 113

    (71) asignacion_date -> type ID EQUAL NEW . DATE LPAREN RPAREN
    (72) asignacion_date -> type ID EQUAL NEW . DATE LPAREN date_param RPAREN
    (75) set -> type ID EQUAL NEW . SET LPAREN RPAREN
    (76) set -> type ID EQUAL NEW . SET LPAREN set_parametro RPAREN

    DATE            shift and go to state 150
    SET             shift and go to state 151


state 114

    (73) array -> type ID EQUAL LBRACKET . RBRACKET
    (74) array -> type ID EQUAL LBRACKET . arr_parametro RBRACKET
    (77) arr_parametro -> . expresion
    (78) arr_parametro -> . expresion COMMA arr_parametro
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    RBRACKET        shift and go to state 152
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    arr_parametro                  shift and go to state 153
    expresion                      shift and go to state 154
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 115

    (81) declaracion -> type ID EQUAL expresion .

    SEMICOLON       reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    IF              reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    FOR             reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    WHILE           reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    ID              reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    NUMBER          reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    VAR             reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    LET             reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    PRINT           reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    STRING          reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    TRUE            reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    FALSE           reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    $end            reduce using rule 81 (declaracion -> type ID EQUAL expresion .)
    RBRACE          reduce using rule 81 (declaracion -> type ID EQUAL expresion .)


state 116

    (31) touppercase -> ID TOUPPERCASE LPAREN RPAREN .

    SEMICOLON       reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    IF              reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    FOR             reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    WHILE           reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    ID              reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    NUMBER          reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    VAR             reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    LET             reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    PRINT           reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    STRING          reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    TRUE            reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    FALSE           reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    $end            reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)
    RBRACE          reduce using rule 31 (touppercase -> ID TOUPPERCASE LPAREN RPAREN .)


state 117

    (33) tolowercase -> ID TOLOWERCASE LPAREN RPAREN .

    SEMICOLON       reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    IF              reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    FOR             reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    WHILE           reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    ID              reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    NUMBER          reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    VAR             reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    LET             reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    PRINT           reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    STRING          reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    TRUE            reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    FALSE           reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    $end            reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)
    RBRACE          reduce using rule 33 (tolowercase -> ID TOLOWERCASE LPAREN RPAREN .)


state 118

    (35) startwith -> ID STARTSWITH LPAREN STRING . RPAREN

    RPAREN          shift and go to state 155


state 119

    (37) tostring -> ID TOSTRING LPAREN RPAREN .

    SEMICOLON       reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    IF              reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    FOR             reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    WHILE           reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    ID              reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    NUMBER          reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    VAR             reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    LET             reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    PRINT           reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    STRING          reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    TRUE            reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    FALSE           reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    $end            reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 37 (tostring -> ID TOSTRING LPAREN RPAREN .)


state 120

    (39) pop -> ID POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    IF              reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    FOR             reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    WHILE           reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    ID              reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    NUMBER          reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    VAR             reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    LET             reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    PRINT           reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    STRING          reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    TRUE            reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    FALSE           reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    $end            reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)
    RBRACE          reduce using rule 39 (pop -> ID POP LPAREN RPAREN .)


state 121

    (41) push -> ID PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 156


state 122

    (43) shift -> ID SHIFT LPAREN RPAREN .

    SEMICOLON       reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    IF              reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    FOR             reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    WHILE           reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    ID              reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    NUMBER          reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    VAR             reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    LET             reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    PRINT           reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    STRING          reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    TRUE            reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    FALSE           reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    $end            reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)
    RBRACE          reduce using rule 43 (shift -> ID SHIFT LPAREN RPAREN .)


state 123

    (45) setdate -> ID SETDATE LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 157


state 124

    (47) getfullyear -> ID GETFULLYEAR LPAREN RPAREN .

    SEMICOLON       reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    IF              reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    FOR             reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    WHILE           reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    ID              reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    NUMBER          reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    VAR             reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    LET             reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    PRINT           reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    STRING          reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    TRUE            reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    FALSE           reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    $end            reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)
    RBRACE          reduce using rule 47 (getfullyear -> ID GETFULLYEAR LPAREN RPAREN .)


state 125

    (49) has -> ID HAS LPAREN factor . RPAREN

    RPAREN          shift and go to state 158


state 126

    (80) set_parametro -> ID .

    RPAREN          reduce using rule 80 (set_parametro -> ID .)


state 127

    (51) intersection -> ID INTERSECTION LPAREN set_parametro . RPAREN

    RPAREN          shift and go to state 159


state 128

    (79) set_parametro -> LBRACKET . arr_parametro RBRACKET
    (77) arr_parametro -> . expresion
    (78) arr_parametro -> . expresion COMMA arr_parametro
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    arr_parametro                  shift and go to state 160
    expresion                      shift and go to state 154
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 129

    (53) union -> ID UNION LPAREN set_parametro . RPAREN

    RPAREN          shift and go to state 161


state 130

    (55) while -> WHILE LPAREN condicion RPAREN . LBRACE sentencias RBRACE

    LBRACE          shift and go to state 162


state 131

    (30) imprimir -> PRINT LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    IF              reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    FOR             reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    WHILE           reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    ID              reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    NUMBER          reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    VAR             reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    LET             reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    PRINT           reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    STRING          reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    TRUE            reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    FALSE           reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    $end            reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)
    RBRACE          reduce using rule 30 (imprimir -> PRINT LPAREN factor RPAREN .)


state 132

    (63) condicion -> LPAREN condicion RPAREN . operadorlogico expresion
    (94) operadorlogico -> . EQUALS
    (95) operadorlogico -> . NOTEQUALS
    (96) operadorlogico -> . STRICTEQUALS
    (97) operadorlogico -> . MORETHAN
    (98) operadorlogico -> . LESSTHAN
    (99) operadorlogico -> . MORETHANEQUALS
    (100) operadorlogico -> . LESSTHANEQUALS
    (101) operadorlogico -> . STRICTNOTEQUALS

    EQUALS          shift and go to state 101
    NOTEQUALS       shift and go to state 102
    STRICTEQUALS    shift and go to state 103
    MORETHAN        shift and go to state 104
    LESSTHAN        shift and go to state 105
    MORETHANEQUALS  shift and go to state 106
    LESSTHANEQUALS  shift and go to state 107
    STRICTNOTEQUALS shift and go to state 108

    operadorlogico                 shift and go to state 163

state 133

    (56) if -> IF LPAREN condicion RPAREN LBRACE . sentencias RBRACE
    (57) if -> IF LPAREN condicion RPAREN LBRACE . sentencias RBRACE else
    (58) if -> IF LPAREN condicion RPAREN LBRACE . sentencias RBRACE elseif
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    sentencias                     shift and go to state 164
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 134

    (62) condicion -> expresion operadorlogico expresion .

    RPAREN          reduce using rule 62 (condicion -> expresion operadorlogico expresion .)


state 135

    (64) condicion -> expresion operadorlogico LPAREN . condicion RPAREN
    (59) condicion -> . TRUE
    (60) condicion -> . FALSE
    (61) condicion -> . NOT expresion
    (62) condicion -> . expresion operadorlogico expresion
    (63) condicion -> . LPAREN condicion RPAREN operadorlogico expresion
    (64) condicion -> . expresion operadorlogico LPAREN condicion RPAREN
    (65) condicion -> . expresion operador_comparison expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    NOT             shift and go to state 74
    LPAREN          shift and go to state 70
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38

    expresion                      shift and go to state 75
    condicion                      shift and go to state 165
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 136

    (65) condicion -> expresion operador_comparison expresion .

    RPAREN          reduce using rule 65 (condicion -> expresion operador_comparison expresion .)


state 137

    (68) for -> FOR LPAREN type ID OF . ID RPAREN LBRACE sentencias RBRACE

    ID              shift and go to state 166


state 138

    (32) touppercase -> type ID EQUAL ID TOUPPERCASE . LPAREN RPAREN

    LPAREN          shift and go to state 167


state 139

    (34) tolowercase -> type ID EQUAL ID TOLOWERCASE . LPAREN RPAREN

    LPAREN          shift and go to state 168


state 140

    (36) startwith -> type ID EQUAL ID STARTSWITH . LPAREN STRING RPAREN

    LPAREN          shift and go to state 169


state 141

    (38) tostring -> type ID EQUAL ID TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 170


state 142

    (40) pop -> type ID EQUAL ID POP . LPAREN RPAREN

    LPAREN          shift and go to state 171


state 143

    (42) push -> type ID EQUAL ID PUSH . LPAREN factor RPAREN

    LPAREN          shift and go to state 172


state 144

    (44) shift -> type ID EQUAL ID SHIFT . LPAREN RPAREN

    LPAREN          shift and go to state 173


state 145

    (46) setdate -> type ID EQUAL ID SETDATE . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 174


state 146

    (48) getfullyear -> type ID EQUAL ID GETFULLYEAR . LPAREN RPAREN

    LPAREN          shift and go to state 175


state 147

    (50) has -> type ID EQUAL ID HAS . LPAREN factor RPAREN

    LPAREN          shift and go to state 176


state 148

    (52) intersection -> type ID EQUAL ID INTERSECTION . LPAREN set_parametro RPAREN

    LPAREN          shift and go to state 177


state 149

    (54) union -> type ID EQUAL ID UNION . LPAREN set_parametro RPAREN

    LPAREN          shift and go to state 178


state 150

    (71) asignacion_date -> type ID EQUAL NEW DATE . LPAREN RPAREN
    (72) asignacion_date -> type ID EQUAL NEW DATE . LPAREN date_param RPAREN

    LPAREN          shift and go to state 179


state 151

    (75) set -> type ID EQUAL NEW SET . LPAREN RPAREN
    (76) set -> type ID EQUAL NEW SET . LPAREN set_parametro RPAREN

    LPAREN          shift and go to state 180


state 152

    (73) array -> type ID EQUAL LBRACKET RBRACKET .

    SEMICOLON       reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    IF              reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    FOR             reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    WHILE           reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    ID              reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    NUMBER          reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    VAR             reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    LET             reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    PRINT           reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    STRING          reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    TRUE            reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    FALSE           reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    $end            reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)
    RBRACE          reduce using rule 73 (array -> type ID EQUAL LBRACKET RBRACKET .)


state 153

    (74) array -> type ID EQUAL LBRACKET arr_parametro . RBRACKET

    RBRACKET        shift and go to state 181


state 154

    (77) arr_parametro -> expresion .
    (78) arr_parametro -> expresion . COMMA arr_parametro

    RBRACKET        reduce using rule 77 (arr_parametro -> expresion .)
    COMMA           shift and go to state 182


state 155

    (35) startwith -> ID STARTSWITH LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    IF              reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    FOR             reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    WHILE           reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    ID              reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    NUMBER          reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    VAR             reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    LET             reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    PRINT           reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    STRING          reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    TRUE            reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    FALSE           reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    $end            reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)
    RBRACE          reduce using rule 35 (startwith -> ID STARTSWITH LPAREN STRING RPAREN .)


state 156

    (41) push -> ID PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    IF              reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    FOR             reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    WHILE           reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    ID              reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    NUMBER          reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    VAR             reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    LET             reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    PRINT           reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    STRING          reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    TRUE            reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    FALSE           reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)
    RBRACE          reduce using rule 41 (push -> ID PUSH LPAREN factor RPAREN .)


state 157

    (45) setdate -> ID SETDATE LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    IF              reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    FOR             reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    WHILE           reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    ID              reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    NUMBER          reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    VAR             reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    LET             reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    PRINT           reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    STRING          reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    TRUE            reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    FALSE           reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    $end            reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)
    RBRACE          reduce using rule 45 (setdate -> ID SETDATE LPAREN NUMBER RPAREN .)


state 158

    (49) has -> ID HAS LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    IF              reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    FOR             reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    WHILE           reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    ID              reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    NUMBER          reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    VAR             reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    LET             reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    PRINT           reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    STRING          reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    TRUE            reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    FALSE           reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    $end            reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)
    RBRACE          reduce using rule 49 (has -> ID HAS LPAREN factor RPAREN .)


state 159

    (51) intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .

    SEMICOLON       reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    IF              reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    FOR             reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    WHILE           reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    ID              reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    NUMBER          reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    VAR             reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    LET             reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    PRINT           reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    STRING          reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    TRUE            reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    FALSE           reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    $end            reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)
    RBRACE          reduce using rule 51 (intersection -> ID INTERSECTION LPAREN set_parametro RPAREN .)


state 160

    (79) set_parametro -> LBRACKET arr_parametro . RBRACKET

    RBRACKET        shift and go to state 183


state 161

    (53) union -> ID UNION LPAREN set_parametro RPAREN .

    SEMICOLON       reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    IF              reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    FOR             reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    WHILE           reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    ID              reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    NUMBER          reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    VAR             reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    LET             reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    PRINT           reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    STRING          reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    TRUE            reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    FALSE           reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    $end            reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)
    RBRACE          reduce using rule 53 (union -> ID UNION LPAREN set_parametro RPAREN .)


state 162

    (55) while -> WHILE LPAREN condicion RPAREN LBRACE . sentencias RBRACE
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    sentencias                     shift and go to state 184
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 163

    (63) condicion -> LPAREN condicion RPAREN operadorlogico . expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 185
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 164

    (56) if -> IF LPAREN condicion RPAREN LBRACE sentencias . RBRACE
    (57) if -> IF LPAREN condicion RPAREN LBRACE sentencias . RBRACE else
    (58) if -> IF LPAREN condicion RPAREN LBRACE sentencias . RBRACE elseif

    RBRACE          shift and go to state 186


state 165

    (64) condicion -> expresion operadorlogico LPAREN condicion . RPAREN

    RPAREN          shift and go to state 187


state 166

    (68) for -> FOR LPAREN type ID OF ID . RPAREN LBRACE sentencias RBRACE

    RPAREN          shift and go to state 188


state 167

    (32) touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN . RPAREN

    RPAREN          shift and go to state 189


state 168

    (34) tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN . RPAREN

    RPAREN          shift and go to state 190


state 169

    (36) startwith -> type ID EQUAL ID STARTSWITH LPAREN . STRING RPAREN

    STRING          shift and go to state 191


state 170

    (38) tostring -> type ID EQUAL ID TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 192


state 171

    (40) pop -> type ID EQUAL ID POP LPAREN . RPAREN

    RPAREN          shift and go to state 193


state 172

    (42) push -> type ID EQUAL ID PUSH LPAREN . factor RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    ID              shift and go to state 76
    NUMBER          shift and go to state 95
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 194

state 173

    (44) shift -> type ID EQUAL ID SHIFT LPAREN . RPAREN

    RPAREN          shift and go to state 195


state 174

    (46) setdate -> type ID EQUAL ID SETDATE LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 196


state 175

    (48) getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN . RPAREN

    RPAREN          shift and go to state 197


state 176

    (50) has -> type ID EQUAL ID HAS LPAREN . factor RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    ID              shift and go to state 76
    NUMBER          shift and go to state 95
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 198

state 177

    (52) intersection -> type ID EQUAL ID INTERSECTION LPAREN . set_parametro RPAREN
    (79) set_parametro -> . LBRACKET arr_parametro RBRACKET
    (80) set_parametro -> . ID

    LBRACKET        shift and go to state 128
    ID              shift and go to state 126

    set_parametro                  shift and go to state 199

state 178

    (54) union -> type ID EQUAL ID UNION LPAREN . set_parametro RPAREN
    (79) set_parametro -> . LBRACKET arr_parametro RBRACKET
    (80) set_parametro -> . ID

    LBRACKET        shift and go to state 128
    ID              shift and go to state 126

    set_parametro                  shift and go to state 200

state 179

    (71) asignacion_date -> type ID EQUAL NEW DATE LPAREN . RPAREN
    (72) asignacion_date -> type ID EQUAL NEW DATE LPAREN . date_param RPAREN
    (82) date_param -> . STRING
    (83) date_param -> . NUMBER
    (84) date_param -> . NUMBER COMMA NUMBER
    (85) date_param -> . NUMBER COMMA NUMBER COMMA NUMBER

    RPAREN          shift and go to state 201
    STRING          shift and go to state 203
    NUMBER          shift and go to state 204

    date_param                     shift and go to state 202

state 180

    (75) set -> type ID EQUAL NEW SET LPAREN . RPAREN
    (76) set -> type ID EQUAL NEW SET LPAREN . set_parametro RPAREN
    (79) set_parametro -> . LBRACKET arr_parametro RBRACKET
    (80) set_parametro -> . ID

    RPAREN          shift and go to state 205
    LBRACKET        shift and go to state 128
    ID              shift and go to state 126

    set_parametro                  shift and go to state 206

state 181

    (74) array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .

    SEMICOLON       reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    IF              reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    FOR             reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    WHILE           reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    ID              reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    NUMBER          reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    VAR             reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    LET             reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    PRINT           reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    STRING          reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    TRUE            reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    FALSE           reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    $end            reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)
    RBRACE          reduce using rule 74 (array -> type ID EQUAL LBRACKET arr_parametro RBRACKET .)


state 182

    (78) arr_parametro -> expresion COMMA . arr_parametro
    (77) arr_parametro -> . expresion
    (78) arr_parametro -> . expresion COMMA arr_parametro
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expresion                      shift and go to state 154
    arr_parametro                  shift and go to state 207
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 183

    (79) set_parametro -> LBRACKET arr_parametro RBRACKET .

    RPAREN          reduce using rule 79 (set_parametro -> LBRACKET arr_parametro RBRACKET .)


state 184

    (55) while -> WHILE LPAREN condicion RPAREN LBRACE sentencias . RBRACE

    RBRACE          shift and go to state 208


state 185

    (63) condicion -> LPAREN condicion RPAREN operadorlogico expresion .

    RPAREN          reduce using rule 63 (condicion -> LPAREN condicion RPAREN operadorlogico expresion .)


state 186

    (56) if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .
    (57) if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE . else
    (58) if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE . elseif
    (66) else -> . ELSE LBRACE sentencias RBRACE
    (67) elseif -> . ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else

    IF              reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    FOR             reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    WHILE           reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    ID              reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    NUMBER          reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    VAR             reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    LET             reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    PRINT           reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    STRING          reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    TRUE            reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    FALSE           reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    $end            reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    RBRACE          reduce using rule 56 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    ELSE            shift and go to state 211

    else                           shift and go to state 209
    elseif                         shift and go to state 210

state 187

    (64) condicion -> expresion operadorlogico LPAREN condicion RPAREN .

    RPAREN          reduce using rule 64 (condicion -> expresion operadorlogico LPAREN condicion RPAREN .)


state 188

    (68) for -> FOR LPAREN type ID OF ID RPAREN . LBRACE sentencias RBRACE

    LBRACE          shift and go to state 212


state 189

    (32) touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .

    SEMICOLON       reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    IF              reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    FOR             reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    WHILE           reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    ID              reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    NUMBER          reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    VAR             reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    LET             reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    PRINT           reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    STRING          reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    TRUE            reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    FALSE           reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    $end            reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)
    RBRACE          reduce using rule 32 (touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN .)


state 190

    (34) tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .

    SEMICOLON       reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    IF              reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    FOR             reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    WHILE           reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    ID              reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    NUMBER          reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    VAR             reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    LET             reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    PRINT           reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    STRING          reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    TRUE            reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    FALSE           reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    $end            reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)
    RBRACE          reduce using rule 34 (tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN .)


state 191

    (36) startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING . RPAREN

    RPAREN          shift and go to state 213


state 192

    (38) tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .

    SEMICOLON       reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    IF              reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    FOR             reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    WHILE           reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    ID              reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    NUMBER          reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    VAR             reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    LET             reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    PRINT           reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    STRING          reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    TRUE            reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    FALSE           reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    $end            reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 38 (tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN .)


state 193

    (40) pop -> type ID EQUAL ID POP LPAREN RPAREN .

    SEMICOLON       reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    IF              reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    FOR             reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    WHILE           reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    ID              reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    NUMBER          reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    VAR             reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    LET             reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    PRINT           reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    STRING          reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    TRUE            reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    FALSE           reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    $end            reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)
    RBRACE          reduce using rule 40 (pop -> type ID EQUAL ID POP LPAREN RPAREN .)


state 194

    (42) push -> type ID EQUAL ID PUSH LPAREN factor . RPAREN

    RPAREN          shift and go to state 214


state 195

    (44) shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .

    SEMICOLON       reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    IF              reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    FOR             reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    WHILE           reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    ID              reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    NUMBER          reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    VAR             reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    LET             reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    PRINT           reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    STRING          reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    TRUE            reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    FALSE           reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    $end            reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)
    RBRACE          reduce using rule 44 (shift -> type ID EQUAL ID SHIFT LPAREN RPAREN .)


state 196

    (46) setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 215


state 197

    (48) getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .

    SEMICOLON       reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    IF              reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    FOR             reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    WHILE           reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    ID              reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    NUMBER          reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    VAR             reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    LET             reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    PRINT           reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    STRING          reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    TRUE            reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    FALSE           reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    $end            reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)
    RBRACE          reduce using rule 48 (getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN .)


state 198

    (50) has -> type ID EQUAL ID HAS LPAREN factor . RPAREN

    RPAREN          shift and go to state 216


state 199

    (52) intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro . RPAREN

    RPAREN          shift and go to state 217


state 200

    (54) union -> type ID EQUAL ID UNION LPAREN set_parametro . RPAREN

    RPAREN          shift and go to state 218


state 201

    (71) asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .

    SEMICOLON       reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    IF              reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    FOR             reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    WHILE           reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    ID              reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    NUMBER          reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    VAR             reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    LET             reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    PRINT           reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    STRING          reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    TRUE            reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    FALSE           reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    $end            reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)
    RBRACE          reduce using rule 71 (asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN .)


state 202

    (72) asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param . RPAREN

    RPAREN          shift and go to state 219


state 203

    (82) date_param -> STRING .

    RPAREN          reduce using rule 82 (date_param -> STRING .)


state 204

    (83) date_param -> NUMBER .
    (84) date_param -> NUMBER . COMMA NUMBER
    (85) date_param -> NUMBER . COMMA NUMBER COMMA NUMBER

    RPAREN          reduce using rule 83 (date_param -> NUMBER .)
    COMMA           shift and go to state 220


state 205

    (75) set -> type ID EQUAL NEW SET LPAREN RPAREN .

    SEMICOLON       reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    IF              reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    FOR             reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    WHILE           reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    ID              reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    NUMBER          reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    VAR             reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    LET             reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    PRINT           reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    STRING          reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    TRUE            reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    FALSE           reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)
    RBRACE          reduce using rule 75 (set -> type ID EQUAL NEW SET LPAREN RPAREN .)


state 206

    (76) set -> type ID EQUAL NEW SET LPAREN set_parametro . RPAREN

    RPAREN          shift and go to state 221


state 207

    (78) arr_parametro -> expresion COMMA arr_parametro .

    RBRACKET        reduce using rule 78 (arr_parametro -> expresion COMMA arr_parametro .)


state 208

    (55) while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .

    IF              reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    FOR             reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    WHILE           reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    ID              reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    NUMBER          reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    VAR             reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    LET             reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    PRINT           reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    STRING          reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    TRUE            reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    FALSE           reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    $end            reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)
    RBRACE          reduce using rule 55 (while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE .)


state 209

    (57) if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .

    IF              reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    FOR             reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    WHILE           reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    ID              reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    NUMBER          reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    VAR             reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    LET             reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    PRINT           reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    STRING          reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    TRUE            reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    FALSE           reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    $end            reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    RBRACE          reduce using rule 57 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)


state 210

    (58) if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .

    IF              reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    FOR             reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    WHILE           reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    ID              reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    NUMBER          reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    VAR             reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    LET             reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    PRINT           reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    STRING          reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    TRUE            reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    FALSE           reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    $end            reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)
    RBRACE          reduce using rule 58 (if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif .)


state 211

    (66) else -> ELSE . LBRACE sentencias RBRACE
    (67) elseif -> ELSE . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else

    LBRACE          shift and go to state 222
    IF              shift and go to state 223


state 212

    (68) for -> FOR LPAREN type ID OF ID RPAREN LBRACE . sentencias RBRACE
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    type                           shift and go to state 9
    sentencias                     shift and go to state 224
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 213

    (36) startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    IF              reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    FOR             reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    WHILE           reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    ID              reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    NUMBER          reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    VAR             reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    LET             reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    PRINT           reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    STRING          reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    TRUE            reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    FALSE           reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    $end            reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)
    RBRACE          reduce using rule 36 (startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN .)


state 214

    (42) push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    IF              reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    FOR             reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    WHILE           reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    ID              reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    NUMBER          reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    VAR             reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    LET             reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    PRINT           reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    STRING          reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    TRUE            reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    FALSE           reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    $end            reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)
    RBRACE          reduce using rule 42 (push -> type ID EQUAL ID PUSH LPAREN factor RPAREN .)


state 215

    (46) setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .

    SEMICOLON       reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    IF              reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    FOR             reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    WHILE           reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    ID              reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    NUMBER          reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    VAR             reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    LET             reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    PRINT           reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    STRING          reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    TRUE            reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    FALSE           reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    $end            reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)
    RBRACE          reduce using rule 46 (setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN .)


state 216

    (50) has -> type ID EQUAL ID HAS LPAREN factor RPAREN .

    SEMICOLON       reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    IF              reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    FOR             reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    WHILE           reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    ID              reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    NUMBER          reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    VAR             reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    LET             reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    PRINT           reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    STRING          reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    TRUE            reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    FALSE           reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    $end            reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)
    RBRACE          reduce using rule 50 (has -> type ID EQUAL ID HAS LPAREN factor RPAREN .)


state 217

    (52) intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .

    SEMICOLON       reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    IF              reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    FOR             reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    WHILE           reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    ID              reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    NUMBER          reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    VAR             reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    LET             reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    PRINT           reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    STRING          reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    TRUE            reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    FALSE           reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    $end            reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)
    RBRACE          reduce using rule 52 (intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN .)


state 218

    (54) union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .

    SEMICOLON       reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    IF              reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    FOR             reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    WHILE           reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    ID              reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    NUMBER          reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    VAR             reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    LET             reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    PRINT           reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    STRING          reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    TRUE            reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    FALSE           reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    $end            reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)
    RBRACE          reduce using rule 54 (union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN .)


state 219

    (72) asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .

    SEMICOLON       reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    IF              reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    FOR             reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    WHILE           reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    ID              reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    NUMBER          reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    VAR             reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    LET             reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    PRINT           reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    STRING          reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    TRUE            reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    FALSE           reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    $end            reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)
    RBRACE          reduce using rule 72 (asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN .)


state 220

    (84) date_param -> NUMBER COMMA . NUMBER
    (85) date_param -> NUMBER COMMA . NUMBER COMMA NUMBER

    NUMBER          shift and go to state 225


state 221

    (76) set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .

    SEMICOLON       reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    IF              reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    FOR             reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    WHILE           reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    ID              reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    NUMBER          reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    VAR             reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    LET             reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    PRINT           reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    STRING          reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    TRUE            reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    FALSE           reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    $end            reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)
    RBRACE          reduce using rule 76 (set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN .)


state 222

    (66) else -> ELSE LBRACE . sentencias RBRACE
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    sentencias                     shift and go to state 226
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 223

    (67) elseif -> ELSE IF . LPAREN condicion RPAREN LBRACE sentencias RBRACE else

    LPAREN          shift and go to state 227


state 224

    (68) for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias . RBRACE

    RBRACE          shift and go to state 228


state 225

    (84) date_param -> NUMBER COMMA NUMBER .
    (85) date_param -> NUMBER COMMA NUMBER . COMMA NUMBER

    RPAREN          reduce using rule 84 (date_param -> NUMBER COMMA NUMBER .)
    COMMA           shift and go to state 229


state 226

    (66) else -> ELSE LBRACE sentencias . RBRACE

    RBRACE          shift and go to state 230


state 227

    (67) elseif -> ELSE IF LPAREN . condicion RPAREN LBRACE sentencias RBRACE else
    (59) condicion -> . TRUE
    (60) condicion -> . FALSE
    (61) condicion -> . NOT expresion
    (62) condicion -> . expresion operadorlogico expresion
    (63) condicion -> . LPAREN condicion RPAREN operadorlogico expresion
    (64) condicion -> . expresion operadorlogico LPAREN condicion RPAREN
    (65) condicion -> . expresion operador_comparison expresion
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (105) term -> . factor
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    NOT             shift and go to state 74
    LPAREN          shift and go to state 70
    NUMBER          shift and go to state 19
    ID              shift and go to state 76
    STRING          shift and go to state 38

    condicion                      shift and go to state 231
    expresion                      shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 36

state 228

    (68) for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .

    IF              reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    FOR             reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    WHILE           reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    ID              reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    NUMBER          reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    VAR             reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    LET             reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    PRINT           reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    STRING          reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    TRUE            reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    FALSE           reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    $end            reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)
    RBRACE          reduce using rule 68 (for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE .)


state 229

    (85) date_param -> NUMBER COMMA NUMBER COMMA . NUMBER

    NUMBER          shift and go to state 232


state 230

    (66) else -> ELSE LBRACE sentencias RBRACE .

    IF              reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    FOR             reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    WHILE           reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    ID              reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    NUMBER          reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    VAR             reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    LET             reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    PRINT           reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    STRING          reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    TRUE            reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    FALSE           reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    $end            reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)
    RBRACE          reduce using rule 66 (else -> ELSE LBRACE sentencias RBRACE .)


state 231

    (67) elseif -> ELSE IF LPAREN condicion . RPAREN LBRACE sentencias RBRACE else

    RPAREN          shift and go to state 233


state 232

    (85) date_param -> NUMBER COMMA NUMBER COMMA NUMBER .

    RPAREN          reduce using rule 85 (date_param -> NUMBER COMMA NUMBER COMMA NUMBER .)


state 233

    (67) elseif -> ELSE IF LPAREN condicion RPAREN . LBRACE sentencias RBRACE else

    LBRACE          shift and go to state 234


state 234

    (67) elseif -> ELSE IF LPAREN condicion RPAREN LBRACE . sentencias RBRACE else
    (1) sentencias -> . statement
    (2) sentencias -> . if
    (3) sentencias -> . for
    (4) sentencias -> . while
    (5) sentencias -> . statement sentencias
    (6) sentencias -> . if sentencias
    (7) sentencias -> . while sentencias
    (8) sentencias -> . for sentencias
    (9) statement -> . stm
    (10) statement -> . stm SEMICOLON
    (56) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (57) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else
    (58) if -> . IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif
    (68) for -> . FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE
    (55) while -> . WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE
    (11) stm -> . asignacion
    (12) stm -> . asignacion_date
    (13) stm -> . array
    (14) stm -> . set
    (15) stm -> . expresion
    (16) stm -> . metodos
    (69) asignacion -> . ID EQUAL expresion
    (70) asignacion -> . declaracion
    (71) asignacion_date -> . type ID EQUAL NEW DATE LPAREN RPAREN
    (72) asignacion_date -> . type ID EQUAL NEW DATE LPAREN date_param RPAREN
    (73) array -> . type ID EQUAL LBRACKET RBRACKET
    (74) array -> . type ID EQUAL LBRACKET arr_parametro RBRACKET
    (75) set -> . type ID EQUAL NEW SET LPAREN RPAREN
    (76) set -> . type ID EQUAL NEW SET LPAREN set_parametro RPAREN
    (88) expresion -> . NUMBER operador NUMBER
    (104) expresion -> . term
    (17) metodos -> . imprimir
    (18) metodos -> . touppercase
    (19) metodos -> . tolowercase
    (20) metodos -> . startwith
    (21) metodos -> . tostring
    (22) metodos -> . pop
    (23) metodos -> . push
    (24) metodos -> . shift
    (25) metodos -> . setdate
    (26) metodos -> . getfullyear
    (27) metodos -> . has
    (28) metodos -> . intersection
    (29) metodos -> . union
    (81) declaracion -> . type ID EQUAL expresion
    (86) type -> . VAR
    (87) type -> . LET
    (105) term -> . factor
    (30) imprimir -> . PRINT LPAREN factor RPAREN
    (31) touppercase -> . ID TOUPPERCASE LPAREN RPAREN
    (32) touppercase -> . type ID EQUAL ID TOUPPERCASE LPAREN RPAREN
    (33) tolowercase -> . ID TOLOWERCASE LPAREN RPAREN
    (34) tolowercase -> . type ID EQUAL ID TOLOWERCASE LPAREN RPAREN
    (35) startwith -> . ID STARTSWITH LPAREN STRING RPAREN
    (36) startwith -> . type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN
    (37) tostring -> . ID TOSTRING LPAREN RPAREN
    (38) tostring -> . type ID EQUAL ID TOSTRING LPAREN RPAREN
    (39) pop -> . ID POP LPAREN RPAREN
    (40) pop -> . type ID EQUAL ID POP LPAREN RPAREN
    (41) push -> . ID PUSH LPAREN factor RPAREN
    (42) push -> . type ID EQUAL ID PUSH LPAREN factor RPAREN
    (43) shift -> . ID SHIFT LPAREN RPAREN
    (44) shift -> . type ID EQUAL ID SHIFT LPAREN RPAREN
    (45) setdate -> . ID SETDATE LPAREN NUMBER RPAREN
    (46) setdate -> . type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN
    (47) getfullyear -> . ID GETFULLYEAR LPAREN RPAREN
    (48) getfullyear -> . type ID EQUAL ID GETFULLYEAR LPAREN RPAREN
    (49) has -> . ID HAS LPAREN factor RPAREN
    (50) has -> . type ID EQUAL ID HAS LPAREN factor RPAREN
    (51) intersection -> . ID INTERSECTION LPAREN set_parametro RPAREN
    (52) intersection -> . type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN
    (53) union -> . ID UNION LPAREN set_parametro RPAREN
    (54) union -> . type ID EQUAL ID UNION LPAREN set_parametro RPAREN
    (106) factor -> . ID
    (107) factor -> . NUMBER
    (108) factor -> . STRING
    (109) factor -> . TRUE
    (110) factor -> . FALSE

    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 11
    ID              shift and go to state 10
    NUMBER          shift and go to state 19
    VAR             shift and go to state 34
    LET             shift and go to state 35
    PRINT           shift and go to state 37
    STRING          shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    sentencias                     shift and go to state 235
    statement                      shift and go to state 2
    if                             shift and go to state 3
    for                            shift and go to state 4
    while                          shift and go to state 5
    stm                            shift and go to state 6
    type                           shift and go to state 9
    asignacion                     shift and go to state 12
    asignacion_date                shift and go to state 13
    array                          shift and go to state 14
    set                            shift and go to state 15
    expresion                      shift and go to state 16
    metodos                        shift and go to state 17
    declaracion                    shift and go to state 18
    term                           shift and go to state 20
    imprimir                       shift and go to state 21
    touppercase                    shift and go to state 22
    tolowercase                    shift and go to state 23
    startwith                      shift and go to state 24
    tostring                       shift and go to state 25
    pop                            shift and go to state 26
    push                           shift and go to state 27
    shift                          shift and go to state 28
    setdate                        shift and go to state 29
    getfullyear                    shift and go to state 30
    has                            shift and go to state 31
    intersection                   shift and go to state 32
    union                          shift and go to state 33
    factor                         shift and go to state 36

state 235

    (67) elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias . RBRACE else

    RBRACE          shift and go to state 236


state 236

    (67) elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE . else
    (66) else -> . ELSE LBRACE sentencias RBRACE

    ELSE            shift and go to state 237

    else                           shift and go to state 238

state 237

    (66) else -> ELSE . LBRACE sentencias RBRACE

    LBRACE          shift and go to state 222


state 238

    (67) elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .

    IF              reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    FOR             reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    WHILE           reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    ID              reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    NUMBER          reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    VAR             reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    LET             reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    PRINT           reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    STRING          reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    TRUE            reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    FALSE           reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    $end            reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)
    RBRACE          reduce using rule 67 (elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else .)

