
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA DATE DIVIDE ELSE EQUAL EQUALS FALSE FOR GETFULLYEAR HAS ID IF INTERSECTION LBRACE LBRACKET LESSTHAN LESSTHANEQUALS LET LPAREN MINUS MOD MORETHAN MORETHANEQUALS NEW NEWLINE NOT NOTEQUALS NUMBER OF OR PLUS POP PRINT PUSH RBRACE RBRACKET RPAREN SEMICOLON SET SETDATE SHIFT STARTSWITH STRICTEQUALS STRICTNOTEQUALS STRING TIMES TOLOWERCASE TOSTRING TOUPPERCASE TRUE UNION VAR WHILEsentencias : statement\n    | if\n    | for\n    | while\n    | statement sentencias\n    | if sentencias\n    | while sentencias\n    | for sentenciasstatement : stm\n    | stm SEMICOLONstm : asignacionstm : asignacion_datestm : arraystm : setstm : expresionstm : metodosmetodos : imprimir\n    | touppercase\n    | tolowercase\n    | startwith\n    | tostring\n    | pop\n    | push\n    | shift\n    | setdate\n    | getfullyear\n    | has\n    | intersection\n    | unionimprimir : PRINT LPAREN factor RPARENtouppercase : ID TOUPPERCASE LPAREN RPAREN\n    | type ID EQUAL ID TOUPPERCASE LPAREN RPARENtolowercase : ID TOLOWERCASE LPAREN RPAREN\n    | type ID EQUAL ID  TOLOWERCASE LPAREN RPARENstartwith : ID STARTSWITH LPAREN STRING RPAREN\n    | type ID EQUAL ID STARTSWITH LPAREN STRING RPARENtostring : ID TOSTRING LPAREN RPAREN\n        | type ID EQUAL ID  TOSTRING LPAREN RPARENpop : ID POP LPAREN RPAREN\n    | type ID EQUAL ID POP LPAREN RPARENpush : ID PUSH LPAREN factor RPAREN\n    | type ID EQUAL ID PUSH LPAREN factor RPARENshift : ID SHIFT LPAREN RPAREN\n    | type ID EQUAL ID SHIFT LPAREN RPARENsetdate : ID SETDATE LPAREN NUMBER RPAREN\n    | type ID EQUAL ID SETDATE LPAREN NUMBER RPARENgetfullyear : ID GETFULLYEAR LPAREN RPAREN\n    | type ID EQUAL ID GETFULLYEAR LPAREN RPARENhas : ID HAS LPAREN factor RPAREN\n    | type ID EQUAL ID HAS LPAREN factor RPARENintersection : ID INTERSECTION LPAREN set_parametro RPAREN\n    | type ID EQUAL ID INTERSECTION LPAREN set_parametro RPARENunion : ID UNION LPAREN set_parametro RPAREN\n    | type ID EQUAL ID UNION LPAREN set_parametro RPARENwhile : WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACEif : IF LPAREN condicion RPAREN LBRACE sentencias RBRACE\n    | IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else\n    | IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseifcondicion : TRUE\n    | FALSE\n    | NOT expresion\n    | expresion operadorlogico expresion\n    | LPAREN condicion RPAREN operadorlogico expresion\n    | expresion operadorlogico LPAREN condicion RPAREN\n    | expresion operador_comparison expresionelse : ELSE LBRACE sentencias RBRACEelseif : ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elsefor : FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACEasignacion : ID EQUAL expresion\n    | declaracionasignacion_date : type ID EQUAL NEW DATE LPAREN RPAREN\n    | type ID EQUAL NEW DATE LPAREN date_param RPARENarray : type ID EQUAL LBRACKET RBRACKET\n    | type ID EQUAL LBRACKET arr_parametro RBRACKETset : type ID EQUAL NEW SET LPAREN RPAREN\n    | type ID EQUAL NEW SET LPAREN set_parametro RPARENarr_parametro : expresion\n    | expresion COMMA arr_parametroset_parametro : LBRACKET arr_parametro RBRACKET\n    | IDdeclaracion : type ID EQUAL expresiondate_param : STRING\n    | NUMBER\n    | NUMBER COMMA NUMBER\n    | NUMBER COMMA NUMBER COMMA NUMBER\n    type : VAR\n    | LETexpresion : NUMBER operador NUMBERoperador : MINUS\n    | PLUS\n    | DIVIDE\n    | TIMES\n    | MODoperadorlogico : EQUALS\n     | NOTEQUALS\n     | STRICTEQUALS\n     | MORETHAN\n     | LESSTHAN\n     | MORETHANEQUALS\n     | LESSTHANEQUALS\n     | STRICTNOTEQUALSoperador_comparison : AND\n     | ORexpresion : termterm : factorfactor : IDfactor : NUMBERfactor : STRINGfactor : TRUE\n    | FALSE '
    
_lr_action_items = {'IF':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,211,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[7,7,7,7,7,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,7,-73,-35,-41,-45,-49,-51,-53,7,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,223,7,-36,-42,-46,-50,-52,-54,-72,-76,7,-68,-66,7,-67,]),'FOR':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[8,8,8,8,8,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,8,-73,-35,-41,-45,-49,-51,-53,8,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,8,-36,-42,-46,-50,-52,-54,-72,-76,8,-68,-66,8,-67,]),'WHILE':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[11,11,11,11,11,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,11,-73,-35,-41,-45,-49,-51,-53,11,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,11,-36,-42,-46,-50,-52,-54,-72,-76,11,-68,-66,11,-67,]),'ID':([0,2,3,4,5,6,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,45,46,49,62,69,70,74,76,77,78,79,85,89,90,91,93,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,119,120,122,124,128,131,133,135,137,152,155,156,157,158,159,161,162,163,172,176,177,178,180,181,182,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,227,228,230,234,238,],[10,10,10,10,10,-9,48,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-86,-87,-105,-108,-109,-110,-10,76,76,76,76,76,76,-106,111,112,-69,76,76,126,126,-88,76,76,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-106,76,-81,-31,-33,-37,-39,-43,-47,76,-30,10,76,166,-73,-35,-41,-45,-49,-51,-53,10,76,76,76,126,126,126,-74,76,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,10,-36,-42,-46,-50,-52,-54,-72,-76,10,76,-68,-66,10,-67,]),'NUMBER':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,46,49,62,63,64,65,66,67,68,69,70,74,76,78,79,85,87,89,93,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,119,120,122,124,128,131,133,135,152,155,156,157,158,159,161,162,163,172,174,176,179,181,182,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,220,221,222,227,228,229,230,234,238,],[19,19,19,19,19,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,19,19,19,93,-89,-90,-91,-92,-93,95,19,19,-106,19,-69,95,123,95,-88,19,19,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-106,19,-81,-31,-33,-37,-39,-43,-47,19,-30,19,19,-73,-35,-41,-45,-49,-51,-53,19,19,95,196,95,204,-74,19,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,19,-36,-42,-46,-50,-52,-54,-72,225,-76,19,19,-68,232,-66,19,-67,]),'VAR':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,47,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[34,34,34,34,34,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,34,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,34,-73,-35,-41,-45,-49,-51,-53,34,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,34,-36,-42,-46,-50,-52,-54,-72,-76,34,-68,-66,34,-67,]),'LET':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,47,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[35,35,35,35,35,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,35,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,35,-73,-35,-41,-45,-49,-51,-53,35,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,35,-36,-42,-46,-50,-52,-54,-72,-76,35,-68,-66,35,-67,]),'PRINT':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,76,79,93,112,115,116,117,119,120,122,124,131,133,152,155,156,157,158,159,161,162,181,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,228,230,234,238,],[37,37,37,37,37,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,37,-73,-35,-41,-45,-49,-51,-53,37,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,37,-36,-42,-46,-50,-52,-54,-72,-76,37,-68,-66,37,-67,]),'STRING':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,46,49,62,69,70,74,76,78,79,82,85,89,93,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,119,120,122,124,128,131,133,135,152,155,156,157,158,159,161,162,163,169,172,176,179,181,182,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,227,228,230,234,238,],[38,38,38,38,38,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,38,38,38,38,38,38,-106,38,-69,118,38,38,-88,38,38,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-106,38,-81,-31,-33,-37,-39,-43,-47,38,-30,38,38,-73,-35,-41,-45,-49,-51,-53,38,38,191,38,38,203,-74,38,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,38,-36,-42,-46,-50,-52,-54,-72,-76,38,38,-68,-66,38,-67,]),'TRUE':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,46,49,62,69,70,74,76,78,79,85,89,93,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,119,120,122,124,128,131,133,135,152,155,156,157,158,159,161,162,163,172,176,181,182,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,227,228,230,234,238,],[39,39,39,39,39,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,72,39,72,39,72,39,-106,39,-69,39,39,-88,39,39,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-106,39,-81,-31,-33,-37,-39,-43,-47,39,-30,39,72,-73,-35,-41,-45,-49,-51,-53,39,39,39,39,-74,39,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,39,-36,-42,-46,-50,-52,-54,-72,-76,39,72,-68,-66,39,-67,]),'FALSE':([0,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,45,46,49,62,69,70,74,76,78,79,85,89,93,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,119,120,122,124,128,131,133,135,152,155,156,157,158,159,161,162,163,172,176,181,182,186,189,190,192,193,195,197,201,205,208,209,210,212,213,214,215,216,217,218,219,221,222,227,228,230,234,238,],[40,40,40,40,40,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-10,73,40,73,40,73,40,-106,40,-69,40,40,-88,40,40,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-106,40,-81,-31,-33,-37,-39,-43,-47,40,-30,40,73,-73,-35,-41,-45,-49,-51,-53,40,40,40,40,-74,40,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,40,-36,-42,-46,-50,-52,-54,-72,-76,40,73,-68,-66,40,-67,]),'$end':([1,2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,41,42,43,44,45,76,79,93,112,115,116,117,119,120,122,124,131,152,155,156,157,158,159,161,181,186,189,190,192,193,195,197,201,205,208,209,210,213,214,215,216,217,218,219,221,228,230,238,],[0,-1,-2,-3,-4,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-5,-6,-8,-7,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,-73,-35,-41,-45,-49,-51,-53,-74,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,-36,-42,-46,-50,-52,-54,-72,-76,-68,-66,-67,]),'RBRACE':([2,3,4,5,6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,41,42,43,44,45,76,79,93,112,115,116,117,119,120,122,124,131,152,155,156,157,158,159,161,164,181,184,186,189,190,192,193,195,197,201,205,208,209,210,213,214,215,216,217,218,219,221,224,226,228,230,235,238,],[-1,-2,-3,-4,-9,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-5,-6,-8,-7,-10,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,-73,-35,-41,-45,-49,-51,-53,186,-74,208,-56,-32,-34,-38,-40,-44,-48,-71,-75,-55,-57,-58,-36,-42,-46,-50,-52,-54,-72,-76,228,230,-68,-66,236,-67,]),'SEMICOLON':([6,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,39,40,76,79,93,112,115,116,117,119,120,122,124,131,152,155,156,157,158,159,161,181,189,190,192,193,195,197,201,205,213,214,215,216,217,218,219,221,],[45,-106,-11,-12,-13,-14,-15,-16,-70,-107,-104,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-105,-108,-109,-110,-106,-69,-88,-106,-81,-31,-33,-37,-39,-43,-47,-30,-73,-35,-41,-45,-49,-51,-53,-74,-32,-34,-38,-40,-44,-48,-71,-75,-36,-42,-46,-50,-52,-54,-72,-76,]),'LPAREN':([7,8,11,37,46,50,51,52,53,54,55,56,57,58,59,60,61,62,70,99,101,102,103,104,105,106,107,108,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,223,227,],[46,47,62,69,70,80,81,82,83,84,85,86,87,88,89,90,91,70,70,135,-94,-95,-96,-97,-98,-99,-100,-101,70,167,168,169,170,171,172,173,174,175,176,177,178,179,180,227,70,]),'EQUAL':([10,48,],[49,78,]),'TOUPPERCASE':([10,112,],[50,138,]),'TOLOWERCASE':([10,112,],[51,139,]),'STARTSWITH':([10,112,],[52,140,]),'TOSTRING':([10,112,],[53,141,]),'POP':([10,112,],[54,142,]),'PUSH':([10,112,],[55,143,]),'SHIFT':([10,112,],[56,144,]),'SETDATE':([10,112,],[57,145,]),'GETFULLYEAR':([10,112,],[58,146,]),'HAS':([10,112,],[59,147,]),'INTERSECTION':([10,112,],[60,148,]),'UNION':([10,112,],[61,149,]),'EQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,101,-106,-88,101,]),'NOTEQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,102,-106,-88,102,]),'STRICTEQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,103,-106,-88,103,]),'MORETHAN':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,104,-106,-88,104,]),'LESSTHAN':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,105,-106,-88,105,]),'MORETHANEQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,106,-106,-88,106,]),'LESSTHANEQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,107,-106,-88,107,]),'STRICTNOTEQUALS':([19,20,36,38,72,73,75,76,93,132,],[-107,-104,-105,-108,-109,-110,108,-106,-88,108,]),'AND':([19,20,36,38,72,73,75,76,93,],[-107,-104,-105,-108,-109,-110,109,-106,-88,]),'OR':([19,20,36,38,72,73,75,76,93,],[-107,-104,-105,-108,-109,-110,110,-106,-88,]),'RPAREN':([19,20,36,38,39,40,71,72,73,76,80,81,83,84,86,88,92,93,94,95,96,98,118,121,123,125,126,127,129,134,136,165,166,167,168,170,171,173,175,179,180,183,185,187,191,194,196,198,199,200,202,203,204,206,225,231,232,],[-107,-104,-105,-108,-109,-110,97,-59,-60,-106,116,117,119,120,122,124,130,-88,131,-107,132,-61,155,156,157,158,-80,159,161,-62,-65,187,188,189,190,192,193,195,197,201,205,-79,-63,-64,213,214,215,216,217,218,219,-82,-83,221,-84,233,-85,]),'COMMA':([19,20,36,38,39,40,76,93,154,204,225,],[-107,-104,-105,-108,-109,-110,-106,-88,182,220,229,]),'RBRACKET':([19,20,36,38,39,40,76,93,114,153,154,160,207,],[-107,-104,-105,-108,-109,-110,-106,-88,152,181,-77,183,-78,]),'MINUS':([19,],[64,]),'PLUS':([19,],[65,]),'DIVIDE':([19,],[66,]),'TIMES':([19,],[67,]),'MOD':([19,],[68,]),'NOT':([46,62,70,135,227,],[74,74,74,74,74,]),'NEW':([78,],[113,]),'LBRACKET':([78,90,91,177,178,180,],[114,128,128,128,128,128,]),'LBRACE':([97,130,188,211,233,237,],[133,162,212,222,234,222,]),'OF':([111,],[137,]),'DATE':([113,],[150,]),'SET':([113,],[151,]),'ELSE':([186,236,],[211,237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,2,3,4,5,133,162,212,222,234,],[1,41,42,43,44,164,184,224,226,235,]),'statement':([0,2,3,4,5,133,162,212,222,234,],[2,2,2,2,2,2,2,2,2,2,]),'if':([0,2,3,4,5,133,162,212,222,234,],[3,3,3,3,3,3,3,3,3,3,]),'for':([0,2,3,4,5,133,162,212,222,234,],[4,4,4,4,4,4,4,4,4,4,]),'while':([0,2,3,4,5,133,162,212,222,234,],[5,5,5,5,5,5,5,5,5,5,]),'stm':([0,2,3,4,5,133,162,212,222,234,],[6,6,6,6,6,6,6,6,6,6,]),'type':([0,2,3,4,5,47,133,162,212,222,234,],[9,9,9,9,9,77,9,9,9,9,9,]),'asignacion':([0,2,3,4,5,133,162,212,222,234,],[12,12,12,12,12,12,12,12,12,12,]),'asignacion_date':([0,2,3,4,5,133,162,212,222,234,],[13,13,13,13,13,13,13,13,13,13,]),'array':([0,2,3,4,5,133,162,212,222,234,],[14,14,14,14,14,14,14,14,14,14,]),'set':([0,2,3,4,5,133,162,212,222,234,],[15,15,15,15,15,15,15,15,15,15,]),'expresion':([0,2,3,4,5,46,49,62,70,74,78,99,100,114,128,133,135,162,163,182,212,222,227,234,],[16,16,16,16,16,75,79,75,75,98,115,134,136,154,154,16,75,16,185,154,16,16,75,16,]),'metodos':([0,2,3,4,5,133,162,212,222,234,],[17,17,17,17,17,17,17,17,17,17,]),'declaracion':([0,2,3,4,5,133,162,212,222,234,],[18,18,18,18,18,18,18,18,18,18,]),'term':([0,2,3,4,5,46,49,62,70,74,78,99,100,114,128,133,135,162,163,182,212,222,227,234,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'imprimir':([0,2,3,4,5,133,162,212,222,234,],[21,21,21,21,21,21,21,21,21,21,]),'touppercase':([0,2,3,4,5,133,162,212,222,234,],[22,22,22,22,22,22,22,22,22,22,]),'tolowercase':([0,2,3,4,5,133,162,212,222,234,],[23,23,23,23,23,23,23,23,23,23,]),'startwith':([0,2,3,4,5,133,162,212,222,234,],[24,24,24,24,24,24,24,24,24,24,]),'tostring':([0,2,3,4,5,133,162,212,222,234,],[25,25,25,25,25,25,25,25,25,25,]),'pop':([0,2,3,4,5,133,162,212,222,234,],[26,26,26,26,26,26,26,26,26,26,]),'push':([0,2,3,4,5,133,162,212,222,234,],[27,27,27,27,27,27,27,27,27,27,]),'shift':([0,2,3,4,5,133,162,212,222,234,],[28,28,28,28,28,28,28,28,28,28,]),'setdate':([0,2,3,4,5,133,162,212,222,234,],[29,29,29,29,29,29,29,29,29,29,]),'getfullyear':([0,2,3,4,5,133,162,212,222,234,],[30,30,30,30,30,30,30,30,30,30,]),'has':([0,2,3,4,5,133,162,212,222,234,],[31,31,31,31,31,31,31,31,31,31,]),'intersection':([0,2,3,4,5,133,162,212,222,234,],[32,32,32,32,32,32,32,32,32,32,]),'union':([0,2,3,4,5,133,162,212,222,234,],[33,33,33,33,33,33,33,33,33,33,]),'factor':([0,2,3,4,5,46,49,62,69,70,74,78,85,89,99,100,114,128,133,135,162,163,172,176,182,212,222,227,234,],[36,36,36,36,36,36,36,36,94,36,36,36,121,125,36,36,36,36,36,36,36,36,194,198,36,36,36,36,36,]),'operador':([19,],[63,]),'condicion':([46,62,70,135,227,],[71,92,96,165,231,]),'operadorlogico':([75,132,],[99,163,]),'operador_comparison':([75,],[100,]),'set_parametro':([90,91,177,178,180,],[127,129,199,200,206,]),'arr_parametro':([114,128,182,],[153,160,207,]),'date_param':([179,],[202,]),'else':([186,236,],[209,238,]),'elseif':([186,],[210,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> statement','sentencias',1,'p_sentencias','sintactico.py',7),
  ('sentencias -> if','sentencias',1,'p_sentencias','sintactico.py',8),
  ('sentencias -> for','sentencias',1,'p_sentencias','sintactico.py',9),
  ('sentencias -> while','sentencias',1,'p_sentencias','sintactico.py',10),
  ('sentencias -> statement sentencias','sentencias',2,'p_sentencias','sintactico.py',11),
  ('sentencias -> if sentencias','sentencias',2,'p_sentencias','sintactico.py',12),
  ('sentencias -> while sentencias','sentencias',2,'p_sentencias','sintactico.py',13),
  ('sentencias -> for sentencias','sentencias',2,'p_sentencias','sintactico.py',14),
  ('statement -> stm','statement',1,'p_statements','sintactico.py',17),
  ('statement -> stm SEMICOLON','statement',2,'p_statements','sintactico.py',18),
  ('stm -> asignacion','stm',1,'p_stm_asignacion','sintactico.py',21),
  ('stm -> asignacion_date','stm',1,'p_stm_asignacion_date','sintactico.py',24),
  ('stm -> array','stm',1,'p_stm_array','sintactico.py',28),
  ('stm -> set','stm',1,'p_stm_set','sintactico.py',31),
  ('stm -> expresion','stm',1,'p_stm_expression','sintactico.py',34),
  ('stm -> metodos','stm',1,'p_stm_metodos','sintactico.py',37),
  ('metodos -> imprimir','metodos',1,'p_metodos','sintactico.py',40),
  ('metodos -> touppercase','metodos',1,'p_metodos','sintactico.py',41),
  ('metodos -> tolowercase','metodos',1,'p_metodos','sintactico.py',42),
  ('metodos -> startwith','metodos',1,'p_metodos','sintactico.py',43),
  ('metodos -> tostring','metodos',1,'p_metodos','sintactico.py',44),
  ('metodos -> pop','metodos',1,'p_metodos','sintactico.py',45),
  ('metodos -> push','metodos',1,'p_metodos','sintactico.py',46),
  ('metodos -> shift','metodos',1,'p_metodos','sintactico.py',47),
  ('metodos -> setdate','metodos',1,'p_metodos','sintactico.py',48),
  ('metodos -> getfullyear','metodos',1,'p_metodos','sintactico.py',49),
  ('metodos -> has','metodos',1,'p_metodos','sintactico.py',50),
  ('metodos -> intersection','metodos',1,'p_metodos','sintactico.py',51),
  ('metodos -> union','metodos',1,'p_metodos','sintactico.py',52),
  ('imprimir -> PRINT LPAREN factor RPAREN','imprimir',4,'p_imprimir','sintactico.py',55),
  ('touppercase -> ID TOUPPERCASE LPAREN RPAREN','touppercase',4,'p_to_upper_case','sintactico.py',60),
  ('touppercase -> type ID EQUAL ID TOUPPERCASE LPAREN RPAREN','touppercase',7,'p_to_upper_case','sintactico.py',61),
  ('tolowercase -> ID TOLOWERCASE LPAREN RPAREN','tolowercase',4,'p_to_lower_case','sintactico.py',65),
  ('tolowercase -> type ID EQUAL ID TOLOWERCASE LPAREN RPAREN','tolowercase',7,'p_to_lower_case','sintactico.py',66),
  ('startwith -> ID STARTSWITH LPAREN STRING RPAREN','startwith',5,'p_start_with','sintactico.py',69),
  ('startwith -> type ID EQUAL ID STARTSWITH LPAREN STRING RPAREN','startwith',8,'p_start_with','sintactico.py',70),
  ('tostring -> ID TOSTRING LPAREN RPAREN','tostring',4,'p_to_string','sintactico.py',73),
  ('tostring -> type ID EQUAL ID TOSTRING LPAREN RPAREN','tostring',7,'p_to_string','sintactico.py',74),
  ('pop -> ID POP LPAREN RPAREN','pop',4,'p_pop','sintactico.py',77),
  ('pop -> type ID EQUAL ID POP LPAREN RPAREN','pop',7,'p_pop','sintactico.py',78),
  ('push -> ID PUSH LPAREN factor RPAREN','push',5,'p_push','sintactico.py',81),
  ('push -> type ID EQUAL ID PUSH LPAREN factor RPAREN','push',8,'p_push','sintactico.py',82),
  ('shift -> ID SHIFT LPAREN RPAREN','shift',4,'p_shift','sintactico.py',85),
  ('shift -> type ID EQUAL ID SHIFT LPAREN RPAREN','shift',7,'p_shift','sintactico.py',86),
  ('setdate -> ID SETDATE LPAREN NUMBER RPAREN','setdate',5,'p_set_date','sintactico.py',89),
  ('setdate -> type ID EQUAL ID SETDATE LPAREN NUMBER RPAREN','setdate',8,'p_set_date','sintactico.py',90),
  ('getfullyear -> ID GETFULLYEAR LPAREN RPAREN','getfullyear',4,'p_get_full_year','sintactico.py',93),
  ('getfullyear -> type ID EQUAL ID GETFULLYEAR LPAREN RPAREN','getfullyear',7,'p_get_full_year','sintactico.py',94),
  ('has -> ID HAS LPAREN factor RPAREN','has',5,'p_has','sintactico.py',97),
  ('has -> type ID EQUAL ID HAS LPAREN factor RPAREN','has',8,'p_has','sintactico.py',98),
  ('intersection -> ID INTERSECTION LPAREN set_parametro RPAREN','intersection',5,'p_intersection','sintactico.py',101),
  ('intersection -> type ID EQUAL ID INTERSECTION LPAREN set_parametro RPAREN','intersection',8,'p_intersection','sintactico.py',102),
  ('union -> ID UNION LPAREN set_parametro RPAREN','union',5,'p_union','sintactico.py',105),
  ('union -> type ID EQUAL ID UNION LPAREN set_parametro RPAREN','union',8,'p_union','sintactico.py',106),
  ('while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE','while',7,'p_while','sintactico.py',110),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE','if',7,'p_if','sintactico.py',113),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else','if',8,'p_if','sintactico.py',114),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif','if',8,'p_if','sintactico.py',115),
  ('condicion -> TRUE','condicion',1,'p_condicion','sintactico.py',118),
  ('condicion -> FALSE','condicion',1,'p_condicion','sintactico.py',119),
  ('condicion -> NOT expresion','condicion',2,'p_condicion','sintactico.py',120),
  ('condicion -> expresion operadorlogico expresion','condicion',3,'p_condicion','sintactico.py',121),
  ('condicion -> LPAREN condicion RPAREN operadorlogico expresion','condicion',5,'p_condicion','sintactico.py',122),
  ('condicion -> expresion operadorlogico LPAREN condicion RPAREN','condicion',5,'p_condicion','sintactico.py',123),
  ('condicion -> expresion operador_comparison expresion','condicion',3,'p_condicion','sintactico.py',124),
  ('else -> ELSE LBRACE sentencias RBRACE','else',4,'p_else','sintactico.py',127),
  ('elseif -> ELSE IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else','elseif',9,'p_else_if','sintactico.py',130),
  ('for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE','for',10,'p_for','sintactico.py',133),
  ('asignacion -> ID EQUAL expresion','asignacion',3,'p_asignacion','sintactico.py',136),
  ('asignacion -> declaracion','asignacion',1,'p_asignacion','sintactico.py',137),
  ('asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN','asignacion_date',7,'p_asignacion_new_date','sintactico.py',140),
  ('asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN','asignacion_date',8,'p_asignacion_new_date','sintactico.py',141),
  ('array -> type ID EQUAL LBRACKET RBRACKET','array',5,'p_array','sintactico.py',144),
  ('array -> type ID EQUAL LBRACKET arr_parametro RBRACKET','array',6,'p_array','sintactico.py',145),
  ('set -> type ID EQUAL NEW SET LPAREN RPAREN','set',7,'p_set','sintactico.py',149),
  ('set -> type ID EQUAL NEW SET LPAREN set_parametro RPAREN','set',8,'p_set','sintactico.py',150),
  ('arr_parametro -> expresion','arr_parametro',1,'p_arr_parametro','sintactico.py',153),
  ('arr_parametro -> expresion COMMA arr_parametro','arr_parametro',3,'p_arr_parametro','sintactico.py',154),
  ('set_parametro -> LBRACKET arr_parametro RBRACKET','set_parametro',3,'p_set_parametro','sintactico.py',157),
  ('set_parametro -> ID','set_parametro',1,'p_set_parametro','sintactico.py',158),
  ('declaracion -> type ID EQUAL expresion','declaracion',4,'p_declaracion','sintactico.py',161),
  ('date_param -> STRING','date_param',1,'p_date_param','sintactico.py',164),
  ('date_param -> NUMBER','date_param',1,'p_date_param','sintactico.py',165),
  ('date_param -> NUMBER COMMA NUMBER','date_param',3,'p_date_param','sintactico.py',166),
  ('date_param -> NUMBER COMMA NUMBER COMMA NUMBER','date_param',5,'p_date_param','sintactico.py',167),
  ('type -> VAR','type',1,'p_type','sintactico.py',172),
  ('type -> LET','type',1,'p_type','sintactico.py',173),
  ('expresion -> NUMBER operador NUMBER','expresion',3,'p_expresion_operacion','sintactico.py',176),
  ('operador -> MINUS','operador',1,'p_operador','sintactico.py',180),
  ('operador -> PLUS','operador',1,'p_operador','sintactico.py',181),
  ('operador -> DIVIDE','operador',1,'p_operador','sintactico.py',182),
  ('operador -> TIMES','operador',1,'p_operador','sintactico.py',183),
  ('operador -> MOD','operador',1,'p_operador','sintactico.py',184),
  ('operadorlogico -> EQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',188),
  ('operadorlogico -> NOTEQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',189),
  ('operadorlogico -> STRICTEQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',190),
  ('operadorlogico -> MORETHAN','operadorlogico',1,'p_operador_logico','sintactico.py',191),
  ('operadorlogico -> LESSTHAN','operadorlogico',1,'p_operador_logico','sintactico.py',192),
  ('operadorlogico -> MORETHANEQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',193),
  ('operadorlogico -> LESSTHANEQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',194),
  ('operadorlogico -> STRICTNOTEQUALS','operadorlogico',1,'p_operador_logico','sintactico.py',195),
  ('operador_comparison -> AND','operador_comparison',1,'p_operador_comparison','sintactico.py',198),
  ('operador_comparison -> OR','operador_comparison',1,'p_operador_comparison','sintactico.py',199),
  ('expresion -> term','expresion',1,'p_expresion_term','sintactico.py',203),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',206),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',209),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',212),
  ('factor -> STRING','factor',1,'p_factor_str','sintactico.py',215),
  ('factor -> TRUE','factor',1,'p_factor_bool','sintactico.py',218),
  ('factor -> FALSE','factor',1,'p_factor_bool','sintactico.py',219),
]
